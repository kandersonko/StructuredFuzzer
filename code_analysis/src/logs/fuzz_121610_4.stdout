JOB timestamp: Mon Dec 18 15:28:05 MST 2023
JOB ID: 121615
Array Task ID: 4
Current directory: /lfs/koff9454.ui/projects/plc_runtime_fuzzer/code_analysis/src
r2i1n4
gcc (Spack GCC) 12.1.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Python 3.11.5
/lfs/koff9454.ui/miniconda3/envs/plc/bin/python
matiec version 0.1
changeset id: 
Number of programs: 3
Programs: condition_1 condition_2 condition_3
Fuzzing program: condition_2, Job ID: 4
input dir exist, skipping
harness file exist, skipping
Running the fuzzers
Workdir: "/lfs/koff9454.ui/projects/plc_runtime_fuzzer/code_analysis/src/programs/condition/condition_2/runs/run-4"
Out dir at "fuzzer-outdir" already exists.
Let's fuzz :)
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 0, objectives: 0, executions: 0, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 0, executions: 1, exec/sec: 0.000
We imported 1 inputs from disk.
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 1, executions: 1, exec/sec: 0.000
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 1, executions: 1, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 1, executions: 11, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 2, executions: 11, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 3, executions: 11, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 4, executions: 11, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 5, executions: 11, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 6, executions: 11, exec/sec: 0.000
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 7, executions: 11, exec/sec: 11.00
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 8, executions: 11, exec/sec: 9.814
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 9, executions: 11, exec/sec: 8.772
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 10, executions: 11, exec/sec: 7.917
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 11, executions: 11, exec/sec: 7.296
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 12, executions: 11, exec/sec: 6.683
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 13, executions: 11, exec/sec: 6.131
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 14, executions: 11, exec/sec: 5.715
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 15, executions: 11, exec/sec: 5.267
[1;92m[+] [0mEnabled environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_IGNORE_SEED_PROBLEMS with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_PCM_DB=2, did you mean AFL_USE_PCM_DB=2?[0m
[0;36mafl-fuzz++4.09a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" EiÃŸfeldt[0m
[1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
[1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 36 CPU cores and 3 runnable tasks (utilization: 8%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/fuzzing_in_depth.md#c-using-multiple-cores[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, try binding to #6.[0m
[1;94m[*] [0mScanning 'our-indir'...[0m
[1;92m[+] [0mLoaded a total of 1 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mTarget map size: 74[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from 'our-inputs.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 80 extra tokens, size range 4 B to 6 B.[0m
[1;92m[+] [0mLoaded a total of 6 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:variables.txt'...[0m
[1;90m    len = 560, map size = 20, exec speed = 5752 us, hash = fe825d59491019c6
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 0 ignored, 1 total
[1;90m       Bitmap range : [0m20 to 20 bits (average: 20.00 bits)
[1;90m        Exec timing : [0m5752 to 5752 us (average: 5752 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 40 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=5752, hits=0, map=20, ascii=0, run_time=0:00:00:00)...[0m
[1;92m[+] [0mEnabled environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_IGNORE_SEED_PROBLEMS with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_PCM_DB=2, did you mean AFL_USE_PCM_DB=2?[0m
[0;36mafl-fuzz++4.09a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" EiÃŸfeldt[0m
[1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
[1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 36 CPU cores and 13 runnable tasks (utilization: 36%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/fuzzing_in_depth.md#c-using-multiple-cores[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, try binding to #9.[0m
[1;94m[*] [0mScanning 'afl-indir'...[0m
[1;92m[+] [0mLoaded a total of 1 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mTarget map size: 74[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from 'afl-inputs.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 80 extra tokens, size range 4 B to 6 B.[0m
[1;92m[+] [0mLoaded a total of 6 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:testcase.txt'...[0m
[1;90m    len = 3, map size = 19, exec speed = 5203 us, hash = ca589d48df9abc58
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 0 ignored, 1 total
[1;90m       Bitmap range : [0m19 to 19 bits (average: 19.00 bits)
[1;90m        Exec timing : [0m5203 to 5203 us (average: 5203 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 40 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=5203, hits=0, map=19, ascii=0, run_time=0:00:00:00)...[0m
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 16, executions: 11, exec/sec: 4.907
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=5464, hits=2, map=20, ascii=0, run_time=0:00:00:00)...[0m
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 17, executions: 11, exec/sec: 4.623
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=15, favorite=1, was_fuzzed=1, exec_us=5203, hits=0, map=19, ascii=0, run_time=0:00:00:00)...[0m
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 18, executions: 11, exec/sec: 4.396
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 19, executions: 11, exec/sec: 4.128
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 20, executions: 11, exec/sec: 3.913
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 21, executions: 11, exec/sec: 3.734
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 22, executions: 11, exec/sec: 3.533
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 23, executions: 11, exec/sec: 3.369
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 24, executions: 11, exec/sec: 3.218
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 25, executions: 11, exec/sec: 3.090
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 26, executions: 11, exec/sec: 2.968
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 27, executions: 11, exec/sec: 2.857
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 28, executions: 11, exec/sec: 2.750
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 29, executions: 11, exec/sec: 2.657
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 30, executions: 11, exec/sec: 2.558
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 31, executions: 11, exec/sec: 2.482
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 32, executions: 11, exec/sec: 2.405
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 33, executions: 11, exec/sec: 2.332
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 34, executions: 11, exec/sec: 2.260
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 35, executions: 11, exec/sec: 2.196
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 36, executions: 11, exec/sec: 2.132
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 37, executions: 11, exec/sec: 2.077
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 38, executions: 11, exec/sec: 2.019
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 39, executions: 11, exec/sec: 1.967
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 40, executions: 11, exec/sec: 1.922
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 41, executions: 11, exec/sec: 1.860
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 42, executions: 11, exec/sec: 1.822
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 43, executions: 11, exec/sec: 1.778
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 44, executions: 11, exec/sec: 1.735
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 45, executions: 11, exec/sec: 1.699
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 46, executions: 11, exec/sec: 1.656
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 47, executions: 11, exec/sec: 1.622
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 48, executions: 11, exec/sec: 1.590
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 49, executions: 11, exec/sec: 1.558
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 50, executions: 11, exec/sec: 1.530
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 51, executions: 11, exec/sec: 1.501
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 52, executions: 11, exec/sec: 1.473
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 53, executions: 11, exec/sec: 1.448
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 54, executions: 11, exec/sec: 1.425
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 55, executions: 11, exec/sec: 1.401
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 56, executions: 11, exec/sec: 1.379
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 57, executions: 11, exec/sec: 1.358
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 58, executions: 11, exec/sec: 1.336
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 59, executions: 11, exec/sec: 1.314
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 60, executions: 11, exec/sec: 1.294
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 61, executions: 11, exec/sec: 1.272
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 62, executions: 11, exec/sec: 1.253
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 63, executions: 11, exec/sec: 1.235
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 64, executions: 11, exec/sec: 1.217
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 65, executions: 11, exec/sec: 1.197
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 66, executions: 11, exec/sec: 1.180
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 67, executions: 11, exec/sec: 1.162
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 68, executions: 11, exec/sec: 1.145
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 69, executions: 11, exec/sec: 1.129
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 70, executions: 11, exec/sec: 1.113
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 71, executions: 11, exec/sec: 1.097
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 72, executions: 11, exec/sec: 1.083
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 73, executions: 11, exec/sec: 1.068
Crash limit reached: 1
[1;94m[*] [0mFuzzing test case #4 (5 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=3979, hits=2, map=19, ascii=0, run_time=0:00:00:41)...[0m
[1;94m[*] [0mFuzzing test case #2 (5 total, 0 crashes saved, state: started :-), mode=explore, perf_score=100, weight=10, favorite=1, was_fuzzed=0, exec_us=3556, hits=8, map=20, ascii=0, run_time=0:00:00:41)...[0m
[?25h[1;91m

+++ Testing aborted programmatically +++
[0m[1;94m[*] [0mStatistics: 20 new corpus items found, 41.89% coverage achieved, 1 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 0 min, 47 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m
[1;94m[*] [0mFuzzing test case #4 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=29, favorite=1, was_fuzzed=1, exec_us=3979, hits=11, map=19, ascii=0, run_time=0:00:01:18)...[0m
[1;94m[*] [0mFuzzing test case #10 (12 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=3899, hits=4, map=19, ascii=0, run_time=0:00:01:47)...[0m
[1;94m[*] [0mFuzzing test case #4 (12 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=17, favorite=1, was_fuzzed=1, exec_us=3979, hits=543, map=19, ascii=0, run_time=0:00:01:47)...[0m
[1;94m[*] [0mFuzzing test case #4 (12 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=17, favorite=1, was_fuzzed=1, exec_us=3979, hits=565, map=19, ascii=0, run_time=0:00:01:47)...[0m
[1;94m[*] [0mFuzzing test case #2 (12 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=4, favorite=1, was_fuzzed=1, exec_us=3556, hits=421, map=20, ascii=0, run_time=0:00:01:47)...[0m
[1;94m[*] [0mFuzzing test case #4 (13 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=17, favorite=1, was_fuzzed=1, exec_us=3979, hits=592, map=19, ascii=0, run_time=0:00:01:48)...[0m
[1;94m[*] [0mFuzzing test case #4 (13 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=17, favorite=1, was_fuzzed=1, exec_us=3979, hits=610, map=19, ascii=0, run_time=0:00:01:48)...[0m
[1;94m[*] [0mFuzzing test case #10 (13 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=5, favorite=1, was_fuzzed=1, exec_us=3899, hits=7, map=19, ascii=0, run_time=0:00:01:48)...[0m
[1;94m[*] [0mFuzzing test case #4 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=17, favorite=1, was_fuzzed=1, exec_us=3979, hits=747, map=19, ascii=0, run_time=0:00:01:50)...[0m
[1;94m[*] [0mFuzzing test case #4 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=17, favorite=1, was_fuzzed=1, exec_us=3979, hits=792, map=19, ascii=0, run_time=0:00:01:50)...[0m
[1;94m[*] [0mFuzzing test case #4 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=17, favorite=1, was_fuzzed=1, exec_us=3979, hits=830, map=19, ascii=0, run_time=0:00:01:50)...[0m
[1;94m[*] [0mFuzzing test case #4 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=17, favorite=1, was_fuzzed=1, exec_us=3979, hits=849, map=19, ascii=0, run_time=0:00:01:50)...[0m
[1;94m[*] [0mFuzzing test case #2 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=4, favorite=1, was_fuzzed=1, exec_us=3556, hits=492, map=20, ascii=0, run_time=0:00:01:50)...[0m
[1;94m[*] [0mFuzzing test case #4 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=17, favorite=1, was_fuzzed=1, exec_us=3979, hits=870, map=19, ascii=0, run_time=0:00:01:50)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #2 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=4, favorite=1, was_fuzzed=1, exec_us=3556, hits=537, map=20, ascii=0, run_time=0:00:01:51)...[0m
[1;94m[*] [0mFuzzing test case #4 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=17, favorite=1, was_fuzzed=1, exec_us=3979, hits=920, map=19, ascii=0, run_time=0:00:01:51)...[0m
[1;94m[*] [0mFuzzing test case #4 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=17, favorite=1, was_fuzzed=1, exec_us=3979, hits=934, map=19, ascii=0, run_time=0:00:01:51)...[0m
[1;94m[*] [0mFuzzing test case #10 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=4, favorite=1, was_fuzzed=1, exec_us=3899, hits=14, map=19, ascii=0, run_time=0:00:01:51)...[0m
[1;94m[*] [0mFuzzing test case #4 (15 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=17, favorite=1, was_fuzzed=1, exec_us=3979, hits=1110, map=19, ascii=0, run_time=0:00:01:53)...[0m
[1;94m[*] [0mFuzzing test case #10 (15 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=3, favorite=1, was_fuzzed=1, exec_us=3899, hits=33, map=19, ascii=0, run_time=0:00:01:53)...[0m
[1;94m[*] [0mFuzzing test case #4 (15 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=17, favorite=1, was_fuzzed=1, exec_us=3979, hits=1197, map=19, ascii=0, run_time=0:00:02:15)...[0m
[1;94m[*] [0mFuzzing test case #15 (16 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1282, hits=1, map=19, ascii=0, run_time=0:00:02:15)...[0m
[1;94m[*] [0mFuzzing test case #15 (16 total, 0 crashes saved, state: started :-), mode=explore, perf_score=1380, weight=206, favorite=1, was_fuzzed=1, exec_us=1282, hits=1, map=19, ascii=0, run_time=0:00:02:15)...[0m
[1;94m[*] [0mFuzzing test case #16 (18 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1261, hits=13, map=19, ascii=0, run_time=0:00:03:11)...[0m
[1;94m[*] [0mFuzzing test case #17 (18 total, 0 crashes saved, state: started :-), mode=explore, perf_score=600, weight=23, favorite=1, was_fuzzed=0, exec_us=1266, hits=10, map=19, ascii=0, run_time=0:00:03:11)...[0m
[1;94m[*] [0mFuzzing test case #16 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=1035, weight=94, favorite=1, was_fuzzed=1, exec_us=1261, hits=15, map=19, ascii=0, run_time=0:00:03:14)...[0m
[1;94m[*] [0mFuzzing test case #16 (21 total, 0 crashes saved, state: started :-), mode=explore, perf_score=690, weight=91, favorite=1, was_fuzzed=1, exec_us=1261, hits=20, map=19, ascii=0, run_time=0:00:03:38)...[0m
[1;94m[*] [0mFuzzing test case #22 (23 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1227, hits=1, map=24, ascii=0, run_time=0:00:03:41)...[0m
[1;94m[*] [0mFuzzing test case #16 (23 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=71, favorite=1, was_fuzzed=1, exec_us=1261, hits=53, map=19, ascii=0, run_time=0:00:03:41)...[0m
[1;94m[*] [0mFuzzing test case #16 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=71, favorite=1, was_fuzzed=1, exec_us=1261, hits=58, map=19, ascii=0, run_time=0:00:03:42)...[0m
[1;94m[*] [0mFuzzing test case #16 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=71, favorite=1, was_fuzzed=1, exec_us=1261, hits=78, map=19, ascii=0, run_time=0:00:04:05)...[0m
[1;94m[*] [0mFuzzing test case #16 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=71, favorite=1, was_fuzzed=1, exec_us=1261, hits=105, map=19, ascii=0, run_time=0:00:04:06)...[0m
[1;94m[*] [0mFuzzing test case #18 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=300, weight=2, favorite=0, was_fuzzed=0, exec_us=1229, hits=42, map=21, ascii=0, run_time=0:00:04:07)...[0m
[1;94m[*] [0mFuzzing test case #16 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=64, favorite=1, was_fuzzed=1, exec_us=1261, hits=124, map=19, ascii=0, run_time=0:00:04:08)...[0m
[1;94m[*] [0mFuzzing test case #22 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=1035, weight=27, favorite=1, was_fuzzed=1, exec_us=1227, hits=8, map=24, ascii=0, run_time=0:00:04:09)...[0m
[1;94m[*] [0mFuzzing test case #25 (42 total, 0 crashes saved, state: in progress, mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1203, hits=3, map=22, ascii=0, run_time=0:00:05:05)...[0m
[1;94m[*] [0mFuzzing test case #33 (42 total, 0 crashes saved, state: in progress, mode=explore, perf_score=400, weight=43, favorite=1, was_fuzzed=0, exec_us=1212, hits=1, map=25, ascii=0, run_time=0:00:05:05)...[0m
[?25h[1;91m

+++ Testing aborted programmatically +++
[0m[1;94m[*] [0mStatistics: 42 new corpus items found, 45.95% coverage achieved, 1 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 5 min, 33 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m

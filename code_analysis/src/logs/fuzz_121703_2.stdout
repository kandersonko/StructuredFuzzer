JOB timestamp: Mon Dec 18 15:33:46 MST 2023
JOB ID: 121706
Array Task ID: 2
Current directory: /lfs/koff9454.ui/projects/plc_runtime_fuzzer/code_analysis/src
r2i1n4
gcc (Spack GCC) 12.1.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Python 3.11.5
/lfs/koff9454.ui/miniconda3/envs/plc/bin/python
matiec version 0.1
changeset id: 
Number of programs: 11
Programs: complex_1 complex_10 complex_2 complex_3 complex_4 complex_5 complex_6 complex_7 complex_8 complex_9 runs
Fuzzing program: complex_2, Job ID: 2
input dir exist, skipping
harness file exist, skipping
Running the fuzzers
Workdir: "/lfs/koff9454.ui/projects/plc_runtime_fuzzer/code_analysis/src/programs/complex/complex_2/runs/run-2"
Out dir at "fuzzer-outdir" already exists.
Let's fuzz :)
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 0, objectives: 0, executions: 0, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 0, executions: 1, exec/sec: 0.000
We imported 1 inputs from disk.
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 0, executions: 1, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 0, executions: 10, exec/sec: 0.000
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 0, executions: 10, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 3, objectives: 0, executions: 11, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 3, objectives: 1, executions: 11, exec/sec: 0.000
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 3, objectives: 1, executions: 11, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 4, objectives: 1, executions: 18, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 4, objectives: 2, executions: 18, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 4, objectives: 3, executions: 18, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 4, objectives: 4, executions: 18, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 4, objectives: 5, executions: 18, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 4, objectives: 6, executions: 18, exec/sec: 0.000
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 4, objectives: 7, executions: 18, exec/sec: 17.13
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 4, objectives: 8, executions: 18, exec/sec: 15.18
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 4, objectives: 9, executions: 18, exec/sec: 13.62
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 4, objectives: 10, executions: 18, exec/sec: 12.32
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 4, objectives: 11, executions: 18, exec/sec: 11.22
Crash limit reached: 1
[1;92m[+] [0mEnabled environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_IGNORE_SEED_PROBLEMS with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_PCM_DB=2, did you mean AFL_USE_PCM_DB=2?[0m
[0;36mafl-fuzz++4.09a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" EiÃŸfeldt[0m
[1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
[1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 36 CPU cores and 5 runnable tasks (utilization: 14%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/fuzzing_in_depth.md#c-using-multiple-cores[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, try binding to #3.[0m
[1;94m[*] [0mScanning 'our-indir'...[0m
[1;92m[+] [0mLoaded a total of 1 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mTarget map size: 100[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from 'our-inputs.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 100 extra tokens, size range 3 B to 6 B.[0m
[1;92m[+] [0mLoaded a total of 8 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:variables.txt'...[0m
[1;90m    len = 820, map size = 31, exec speed = 1459 us, hash = 20285bdea9e4eeec
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 0 ignored, 1 total
[1;90m       Bitmap range : [0m31 to 31 bits (average: 31.00 bits)
[1;90m        Exec timing : [0m1459 to 1459 us (average: 1459 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 20 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1459, hits=0, map=31, ascii=0, run_time=0:00:00:00)...[0m
[1;92m[+] [0mEnabled environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_IGNORE_SEED_PROBLEMS with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_PCM_DB=2, did you mean AFL_USE_PCM_DB=2?[0m
[0;36mafl-fuzz++4.09a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" EiÃŸfeldt[0m
[1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
[1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 36 CPU cores and 7 runnable tasks (utilization: 19%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/fuzzing_in_depth.md#c-using-multiple-cores[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, try binding to #5.[0m
[1;94m[*] [0mScanning 'afl-indir'...[0m
[1;92m[+] [0mLoaded a total of 1 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mTarget map size: 100[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from 'afl-inputs.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 100 extra tokens, size range 3 B to 6 B.[0m
[1;92m[+] [0mLoaded a total of 8 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:testcase.txt'...[0m
[1;90m    len = 3, map size = 25, exec speed = 1310 us, hash = dad630a4efedcd3f
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 0 ignored, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m1310 to 1310 us (average: 1310 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 20 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:00:00)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1250, hits=6, map=26, ascii=0, run_time=0:00:00:00)...[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=14, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:00:00)...[0m
[?25h[1;91m

+++ Testing aborted programmatically +++
[0m[1;94m[*] [0mStatistics: 20 new corpus items found, 44.00% coverage achieved, 2 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 0 min, 25 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m
[1;94m[*] [0mFuzzing test case #13 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1478, hits=7, map=25, ascii=0, run_time=0:00:00:57)...[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:00:57)...[0m
[1;94m[*] [0mFuzzing test case #2 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=100, weight=5, favorite=1, was_fuzzed=0, exec_us=1315, hits=83, map=25, ascii=0, run_time=0:00:00:58)...[0m
[1;94m[*] [0mFuzzing test case #1 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=2, favorite=1, was_fuzzed=1, exec_us=1250, hits=938, map=26, ascii=0, run_time=0:00:00:59)...[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:00:59)...[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:01:00)...[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:01:00)...[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:01:01)...[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:01:13)...[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:01:14)...[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:01:32)...[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:01:33)...[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:01:33)...[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:01:34)...[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:01:35)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:01:35)...[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:01:36)...[0m
[1;94m[*] [0mFuzzing test case #0 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=68, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:01:36)...[0m
[1;94m[*] [0mFuzzing test case #13 (14 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=3, favorite=1, was_fuzzed=1, exec_us=1478, hits=30, map=25, ascii=0, run_time=0:00:01:37)...[0m
[1;94m[*] [0mFuzzing test case #16 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1322, hits=1, map=27, ascii=0, run_time=0:00:01:58)...[0m
[1;94m[*] [0mFuzzing test case #18 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=200, weight=29, favorite=1, was_fuzzed=0, exec_us=1275, hits=1, map=29, ascii=0, run_time=0:00:01:58)...[0m
[1;94m[*] [0mFuzzing test case #17 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=200, weight=17, favorite=1, was_fuzzed=0, exec_us=1257, hits=1, map=27, ascii=0, run_time=0:00:01:59)...[0m
[1;94m[*] [0mFuzzing test case #19 (21 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1222, hits=1, map=30, ascii=0, run_time=0:00:02:00)...[0m
[1;94m[*] [0mFuzzing test case #14 (21 total, 0 crashes saved, state: started :-), mode=explore, perf_score=100, weight=14, favorite=1, was_fuzzed=0, exec_us=1517, hits=1, map=28, ascii=0, run_time=0:00:02:00)...[0m
[1;94m[*] [0mFuzzing test case #18 (21 total, 0 crashes saved, state: started :-), mode=explore, perf_score=229, weight=6, favorite=1, was_fuzzed=1, exec_us=1275, hits=30, map=29, ascii=0, run_time=0:00:02:01)...[0m
[1;94m[*] [0mFuzzing test case #29 (32 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1267, hits=1, map=32, ascii=0, run_time=0:00:02:04)...[0m
[1;94m[*] [0mFuzzing test case #30 (32 total, 0 crashes saved, state: started :-), mode=explore, perf_score=400, weight=20, favorite=1, was_fuzzed=0, exec_us=1266, hits=1, map=32, ascii=0, run_time=0:00:02:04)...[0m
[1;94m[*] [0mFuzzing test case #33 (43 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1244, hits=1, map=32, ascii=0, run_time=0:00:03:04)...[0m
[1;94m[*] [0mFuzzing test case #41 (43 total, 0 crashes saved, state: started :-), mode=explore, perf_score=400, weight=22, favorite=1, was_fuzzed=0, exec_us=1264, hits=1, map=31, ascii=0, run_time=0:00:03:04)...[0m
[1;94m[*] [0mFuzzing test case #40 (53 total, 0 crashes saved, state: started :-), mode=explore, perf_score=400, weight=23, favorite=1, was_fuzzed=0, exec_us=1220, hits=1, map=32, ascii=0, run_time=0:00:03:55)...[0m
[1;94m[*] [0mFuzzing test case #38 (55 total, 0 crashes saved, state: started :-), mode=explore, perf_score=400, weight=22, favorite=1, was_fuzzed=0, exec_us=1234, hits=1, map=32, ascii=0, run_time=0:00:03:57)...[0m
[1;94m[*] [0mFuzzing test case #51 (56 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1227, hits=1, map=30, ascii=0, run_time=0:00:04:09)...[0m
[1;94m[*] [0mFuzzing test case #0 (56 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=161, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:04:09)...[0m
[1;94m[*] [0mFuzzing test case #0 (56 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=161, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:04:09)...[0m
[1;94m[*] [0mFuzzing test case #14 (56 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=5, favorite=1, was_fuzzed=1, exec_us=1517, hits=11, map=28, ascii=0, run_time=0:00:04:10)...[0m
[1;94m[*] [0mFuzzing test case #22 (58 total, 0 crashes saved, state: started :-), mode=explore, perf_score=200, weight=1, favorite=0, was_fuzzed=0, exec_us=1276, hits=39, map=31, ascii=0, run_time=0:00:04:11)...[0m
[1;94m[*] [0mFuzzing test case #33 (58 total, 0 crashes saved, state: started :-), mode=explore, perf_score=919, weight=13, favorite=1, was_fuzzed=1, exec_us=1244, hits=1, map=32, ascii=0, run_time=0:00:04:12)...[0m
[1;94m[*] [0mFuzzing test case #62 (63 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1198, hits=1, map=34, ascii=0, run_time=0:00:04:36)...[0m
[1;94m[*] [0mFuzzing test case #0 (63 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=168, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:04:36)...[0m
[1;94m[*] [0mFuzzing test case #59 (63 total, 0 crashes saved, state: started :-), mode=explore, perf_score=400, weight=24, favorite=1, was_fuzzed=0, exec_us=1298, hits=1, map=32, ascii=0, run_time=0:00:04:37)...[0m
[1;94m[*] [0mFuzzing test case #63 (64 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1185, hits=1, map=32, ascii=0, run_time=0:00:04:39)...[0m
[1;94m[*] [0mFuzzing test case #0 (64 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=170, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:04:39)...[0m
[1;94m[*] [0mFuzzing test case #0 (64 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=170, favorite=1, was_fuzzed=1, exec_us=1310, hits=0, map=25, ascii=0, run_time=0:00:04:40)...[0m
[1;94m[*] [0mFuzzing test case #62 (64 total, 0 crashes saved, state: started :-), mode=explore, perf_score=919, weight=21, favorite=1, was_fuzzed=1, exec_us=1198, hits=1, map=34, ascii=0, run_time=0:00:04:40)...[0m
[?25h[1;91m

+++ Testing aborted programmatically +++
[0m[1;94m[*] [0mStatistics: 65 new corpus items found, 49.00% coverage achieved, 1 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 4 min, 41 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m

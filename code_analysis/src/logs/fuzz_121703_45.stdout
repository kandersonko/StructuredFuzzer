JOB timestamp: Mon Dec 18 15:33:47 MST 2023
JOB ID: 121749
Array Task ID: 45
Current directory: /lfs/koff9454.ui/projects/plc_runtime_fuzzer/code_analysis/src
r5i7n5
gcc (Spack GCC) 12.1.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Python 3.11.5
/lfs/koff9454.ui/miniconda3/envs/plc/bin/python
matiec version 0.1
changeset id: 
Number of programs: 11
Programs: complex_1 complex_10 complex_2 complex_3 complex_4 complex_5 complex_6 complex_7 complex_8 complex_9 runs
Fuzzing program: complex_10, Job ID: 45
input dir exist, skipping
harness file exist, skipping
Running the fuzzers
Workdir: "/lfs/koff9454.ui/projects/plc_runtime_fuzzer/code_analysis/src/programs/complex/complex_10/runs/run-45"
Out dir at "fuzzer-outdir" already exists.
Let's fuzz :)
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 0, objectives: 0, executions: 0, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 0, executions: 1, exec/sec: 0.000
We imported 1 inputs from disk.
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 0, executions: 1, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 0, executions: 10, exec/sec: 0.000
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 0, executions: 10, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 3, objectives: 0, executions: 73, exec/sec: 0.000
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 3, objectives: 0, executions: 73, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 4, objectives: 0, executions: 123, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 4, objectives: 1, executions: 123, exec/sec: 0.000
Crash limit reached: 1
[1;92m[+] [0mEnabled environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_IGNORE_SEED_PROBLEMS with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_PCM_DB=2, did you mean AFL_USE_PCM_DB=2?[0m
[0;36mafl-fuzz++4.09a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" EiÃŸfeldt[0m
[1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
[1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 36 CPU cores and 5 runnable tasks (utilization: 14%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/fuzzing_in_depth.md#c-using-multiple-cores[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, try binding to #0.[0m
[1;94m[*] [0mScanning 'afl-indir'...[0m
[1;92m[+] [0mLoaded a total of 1 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mTarget map size: 95[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from 'afl-inputs.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 60 extra tokens, size range 3 B to 6 B.[0m
[1;92m[+] [0mLoaded a total of 6 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:testcase.txt'...[0m
[1;90m    len = 3, map size = 21, exec speed = 5039 us, hash = 37d596654de92320
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 0 ignored, 1 total
[1;90m       Bitmap range : [0m21 to 21 bits (average: 21.00 bits)
[1;90m        Exec timing : [0m5039 to 5039 us (average: 5039 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 40 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=5039, hits=0, map=21, ascii=0, run_time=0:00:00:00)...[0m
[1;92m[+] [0mEnabled environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_IGNORE_SEED_PROBLEMS with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_PCM_DB=2, did you mean AFL_USE_PCM_DB=2?[0m
[0;36mafl-fuzz++4.09a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" EiÃŸfeldt[0m
[1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
[1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 36 CPU cores and 3 runnable tasks (utilization: 8%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/fuzzing_in_depth.md#c-using-multiple-cores[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, try binding to #0.[0m
[1;94m[*] [0mScanning 'our-indir'...[0m
[1;92m[+] [0mLoaded a total of 1 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mTarget map size: 95[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from 'our-inputs.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 60 extra tokens, size range 3 B to 6 B.[0m
[1;92m[+] [0mLoaded a total of 6 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:variables.txt'...[0m
[1;90m    len = 234, map size = 24, exec speed = 3813 us, hash = a6c896f3fc1c6d77
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 0 ignored, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m3813 to 3813 us (average: 3813 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 20 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=3813, hits=0, map=24, ascii=0, run_time=0:00:00:00)...[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=10, favorite=1, was_fuzzed=1, exec_us=5039, hits=0, map=21, ascii=0, run_time=0:00:00:00)...[0m
[?25h[1;91m

+++ Testing aborted programmatically +++
[0m[1;94m[*] [0mStatistics: 17 new corpus items found, 36.84% coverage achieved, 1 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 0 min, 32 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m
[1;94m[*] [0mFuzzing test case #8 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=2216, hits=1, map=21, ascii=0, run_time=0:00:01:08)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=100, weight=3, favorite=1, was_fuzzed=0, exec_us=3505, hits=908, map=22, ascii=0, run_time=0:00:01:08)...[0m
[1;94m[*] [0mFuzzing test case #6 (15 total, 0 crashes saved, state: started :-), mode=explore, perf_score=100, weight=5, favorite=1, was_fuzzed=0, exec_us=3009, hits=98, map=21, ascii=0, run_time=0:00:01:09)...[0m
[1;94m[*] [0mFuzzing test case #15 (16 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1618, hits=1, map=23, ascii=0, run_time=0:00:01:09)...[0m
[1;94m[*] [0mFuzzing test case #6 (16 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=19, favorite=1, was_fuzzed=1, exec_us=3009, hits=126, map=21, ascii=0, run_time=0:00:01:09)...[0m
[1;94m[*] [0mFuzzing test case #6 (16 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=19, favorite=1, was_fuzzed=1, exec_us=3009, hits=158, map=21, ascii=0, run_time=0:00:01:10)...[0m
[1;94m[*] [0mFuzzing test case #8 (16 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=9, favorite=1, was_fuzzed=1, exec_us=2216, hits=1, map=21, ascii=0, run_time=0:00:01:10)...[0m
[1;94m[*] [0mFuzzing test case #17 (18 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1482, hits=2, map=21, ascii=0, run_time=0:00:01:15)...[0m
[1;94m[*] [0mFuzzing test case #16 (18 total, 0 crashes saved, state: started :-), mode=explore, perf_score=100, weight=16, favorite=1, was_fuzzed=0, exec_us=1520, hits=4, map=21, ascii=0, run_time=0:00:01:15)...[0m
[1;94m[*] [0mFuzzing test case #17 (18 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=93, favorite=1, was_fuzzed=1, exec_us=1482, hits=2, map=21, ascii=0, run_time=0:00:01:34)...[0m
[1;94m[*] [0mFuzzing test case #17 (18 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=93, favorite=1, was_fuzzed=1, exec_us=1482, hits=52, map=21, ascii=0, run_time=0:00:01:36)...[0m
[1;94m[*] [0mFuzzing test case #17 (18 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=93, favorite=1, was_fuzzed=1, exec_us=1482, hits=63, map=21, ascii=0, run_time=0:00:01:38)...[0m
[1;94m[*] [0mFuzzing test case #17 (18 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=93, favorite=1, was_fuzzed=1, exec_us=1482, hits=78, map=21, ascii=0, run_time=0:00:01:40)...[0m
[1;94m[*] [0mFuzzing test case #17 (18 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=93, favorite=1, was_fuzzed=1, exec_us=1482, hits=135, map=21, ascii=0, run_time=0:00:02:00)...[0m
[1;94m[*] [0mFuzzing test case #17 (18 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=93, favorite=1, was_fuzzed=1, exec_us=1482, hits=142, map=21, ascii=0, run_time=0:00:02:02)...[0m
[1;94m[*] [0mFuzzing test case #17 (18 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=93, favorite=1, was_fuzzed=1, exec_us=1482, hits=194, map=21, ascii=0, run_time=0:00:02:04)...[0m
[1;94m[*] [0mFuzzing test case #17 (18 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=93, favorite=1, was_fuzzed=1, exec_us=1482, hits=218, map=21, ascii=0, run_time=0:00:02:18)...[0m
[1;94m[*] [0mFuzzing test case #18 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1578, hits=1, map=25, ascii=0, run_time=0:00:02:21)...[0m
[1;94m[*] [0mFuzzing test case #17 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=32, favorite=1, was_fuzzed=1, exec_us=1482, hits=339, map=21, ascii=0, run_time=0:00:02:21)...[0m
[1;94m[*] [0mFuzzing test case #17 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=32, favorite=1, was_fuzzed=1, exec_us=1482, hits=347, map=21, ascii=0, run_time=0:00:02:34)...[0m
[1;94m[*] [0mFuzzing test case #17 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=32, favorite=1, was_fuzzed=1, exec_us=1482, hits=349, map=21, ascii=0, run_time=0:00:02:34)...[0m
[1;94m[*] [0mFuzzing test case #8 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=3, favorite=1, was_fuzzed=1, exec_us=2216, hits=234, map=21, ascii=0, run_time=0:00:02:35)...[0m
[1;94m[*] [0mFuzzing test case #15 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=229, weight=5, favorite=1, was_fuzzed=1, exec_us=1618, hits=25, map=23, ascii=0, run_time=0:00:02:35)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #18 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=919, weight=23, favorite=1, was_fuzzed=1, exec_us=1578, hits=2, map=25, ascii=0, run_time=0:00:02:36)...[0m
[1;94m[*] [0mFuzzing test case #20 (27 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1548, hits=14, map=23, ascii=0, run_time=0:00:03:18)...[0m
[1;94m[*] [0mFuzzing test case #24 (27 total, 0 crashes saved, state: started :-), mode=explore, perf_score=400, weight=27, favorite=1, was_fuzzed=0, exec_us=1554, hits=7, map=25, ascii=0, run_time=0:00:03:18)...[0m
[1;94m[*] [0mFuzzing test case #31 (33 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1461, hits=1, map=26, ascii=0, run_time=0:00:03:21)...[0m
[1;94m[*] [0mFuzzing test case #24 (33 total, 0 crashes saved, state: started :-), mode=explore, perf_score=229, weight=9, favorite=1, was_fuzzed=1, exec_us=1554, hits=71, map=25, ascii=0, run_time=0:00:03:21)...[0m
[1;94m[*] [0mFuzzing test case #17 (34 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=41, favorite=1, was_fuzzed=1, exec_us=1482, hits=400, map=21, ascii=0, run_time=0:00:03:22)...[0m
[1;94m[*] [0mFuzzing test case #17 (34 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=41, favorite=1, was_fuzzed=1, exec_us=1482, hits=401, map=21, ascii=0, run_time=0:00:03:22)...[0m
[1;94m[*] [0mFuzzing test case #16 (34 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=5, favorite=1, was_fuzzed=1, exec_us=1520, hits=41, map=21, ascii=0, run_time=0:00:03:23)...[0m
[1;94m[*] [0mFuzzing test case #16 (34 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=5, favorite=1, was_fuzzed=1, exec_us=1520, hits=43, map=21, ascii=0, run_time=0:00:03:30)...[0m
[1;94m[*] [0mFuzzing test case #31 (34 total, 0 crashes saved, state: started :-), mode=explore, perf_score=919, weight=14, favorite=1, was_fuzzed=1, exec_us=1461, hits=1, map=26, ascii=0, run_time=0:00:03:31)...[0m
[1;94m[*] [0mFuzzing test case #37 (41 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1481, hits=2, map=27, ascii=0, run_time=0:00:04:00)...[0m
[1;94m[*] [0mFuzzing test case #17 (41 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=832, favorite=1, was_fuzzed=1, exec_us=1482, hits=412, map=21, ascii=0, run_time=0:00:04:00)...[0m
[1;94m[*] [0mFuzzing test case #20 (42 total, 0 crashes saved, state: started :-), mode=explore, perf_score=1380, weight=108, favorite=1, was_fuzzed=1, exec_us=1548, hits=19, map=23, ascii=0, run_time=0:00:04:02)...[0m
[1;94m[*] [0mFuzzing test case #8 (44 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=48, favorite=1, was_fuzzed=1, exec_us=2216, hits=244, map=21, ascii=0, run_time=0:00:04:22)...[0m
[1;94m[*] [0mFuzzing test case #17 (44 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=825, favorite=1, was_fuzzed=1, exec_us=1482, hits=437, map=21, ascii=0, run_time=0:00:04:24)...[0m
[1;94m[*] [0mFuzzing test case #17 (45 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=824, favorite=1, was_fuzzed=1, exec_us=1482, hits=444, map=21, ascii=0, run_time=0:00:04:25)...[0m
[1;94m[*] [0mFuzzing test case #24 (45 total, 0 crashes saved, state: started :-), mode=explore, perf_score=690, weight=170, favorite=1, was_fuzzed=1, exec_us=1554, hits=117, map=25, ascii=0, run_time=0:00:04:27)...[0m
[1;94m[*] [0mFuzzing test case #17 (48 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=817, favorite=1, was_fuzzed=1, exec_us=1482, hits=474, map=21, ascii=0, run_time=0:00:04:37)...[0m
[1;94m[*] [0mFuzzing test case #17 (48 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=817, favorite=1, was_fuzzed=1, exec_us=1482, hits=511, map=21, ascii=0, run_time=0:00:04:39)...[0m
[1;94m[*] [0mFuzzing test case #15 (49 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=70, favorite=1, was_fuzzed=1, exec_us=1618, hits=149, map=23, ascii=0, run_time=0:00:04:40)...[0m
[1;94m[*] [0mFuzzing test case #18 (49 total, 0 crashes saved, state: started :-), mode=explore, perf_score=690, weight=61, favorite=1, was_fuzzed=1, exec_us=1578, hits=617, map=25, ascii=0, run_time=0:00:04:42)...[0m
[1;94m[*] [0mFuzzing test case #37 (49 total, 0 crashes saved, state: started :-), mode=explore, perf_score=1380, weight=103, favorite=1, was_fuzzed=1, exec_us=1481, hits=30, map=27, ascii=0, run_time=0:00:04:45)...[0m
[1;94m[*] [0mFuzzing test case #49 (50 total, 0 crashes saved, state: in progress, mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1569, hits=2, map=27, ascii=0, run_time=0:00:05:04)...[0m
[1;94m[*] [0mFuzzing test case #20 (50 total, 0 crashes saved, state: in progress, mode=explore, perf_score=690, weight=63, favorite=1, was_fuzzed=1, exec_us=1548, hits=273, map=23, ascii=0, run_time=0:00:05:04)...[0m
[1;94m[*] [0mFuzzing test case #49 (50 total, 0 crashes saved, state: in progress, mode=explore, perf_score=4140, weight=561, favorite=1, was_fuzzed=1, exec_us=1569, hits=2, map=27, ascii=0, run_time=0:00:05:09)...[0m
[?25h[1;91m

+++ Testing aborted programmatically +++
[0m[1;94m[*] [0mStatistics: 53 new corpus items found, 51.58% coverage achieved, 1 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 5 min, 31 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m

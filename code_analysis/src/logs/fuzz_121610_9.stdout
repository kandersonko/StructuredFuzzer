JOB timestamp: Mon Dec 18 15:28:05 MST 2023
JOB ID: 121620
Array Task ID: 9
Current directory: /lfs/koff9454.ui/projects/plc_runtime_fuzzer/code_analysis/src
r3i4n3
gcc (Spack GCC) 12.1.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Python 3.11.5
/lfs/koff9454.ui/miniconda3/envs/plc/bin/python
matiec version 0.1
changeset id: 
Number of programs: 3
Programs: condition_1 condition_2 condition_3
Fuzzing program: condition_1, Job ID: 9
input dir exist, skipping
harness file exist, skipping
Running the fuzzers
Workdir: "/lfs/koff9454.ui/projects/plc_runtime_fuzzer/code_analysis/src/programs/condition/condition_1/runs/run-9"
Out dir at "fuzzer-outdir" already exists.
Let's fuzz :)
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 0, objectives: 0, executions: 0, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 0, executions: 1, exec/sec: 0.000
We imported 1 inputs from disk.
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 1, executions: 1, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 2, executions: 1, exec/sec: 0.000
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 2, executions: 1, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 2, executions: 12, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 3, executions: 12, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 4, executions: 12, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 5, executions: 12, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 6, executions: 12, exec/sec: 0.000
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 7, executions: 12, exec/sec: 11.87
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 8, executions: 12, exec/sec: 10.51
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 9, executions: 12, exec/sec: 9.482
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 10, executions: 12, exec/sec: 8.506
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 11, executions: 12, exec/sec: 7.669
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 12, executions: 12, exec/sec: 6.990
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 13, executions: 12, exec/sec: 6.476
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 14, executions: 12, exec/sec: 5.984
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 15, executions: 12, exec/sec: 5.597
[1;92m[+] [0mEnabled environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_IGNORE_SEED_PROBLEMS with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_PCM_DB=2, did you mean AFL_USE_PCM_DB=2?[0m
[0;36mafl-fuzz++4.09a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" EiÃŸfeldt[0m
[1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
[1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 36 CPU cores and 5 runnable tasks (utilization: 14%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/fuzzing_in_depth.md#c-using-multiple-cores[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, try binding to #8.[0m
[1;94m[*] [0mScanning 'our-indir'...[0m
[1;92m[+] [0mLoaded a total of 1 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mTarget map size: 68[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from 'our-inputs.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 88 extra tokens, size range 4 B to 6 B.[0m
[1;92m[+] [0mLoaded a total of 6 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:variables.txt'...[0m
[1;90m    len = 616, map size = 19, exec speed = 7321 us, hash = 64e735e0cc07a8c6
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 0 ignored, 1 total
[1;90m       Bitmap range : [0m19 to 19 bits (average: 19.00 bits)
[1;90m        Exec timing : [0m7321 to 7321 us (average: 7321 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 40 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=7321, hits=0, map=19, ascii=0, run_time=0:00:00:00)...[0m
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 16, executions: 12, exec/sec: 5.220
[1;92m[+] [0mEnabled environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_IGNORE_SEED_PROBLEMS with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_PCM_DB=2, did you mean AFL_USE_PCM_DB=2?[0m
[0;36mafl-fuzz++4.09a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" EiÃŸfeldt[0m
[1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
[1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 36 CPU cores and 8 runnable tasks (utilization: 22%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/fuzzing_in_depth.md#c-using-multiple-cores[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, try binding to #13.[0m
[1;94m[*] [0mScanning 'afl-indir'...[0m
[1;92m[+] [0mLoaded a total of 1 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mTarget map size: 68[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from 'afl-inputs.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 88 extra tokens, size range 4 B to 6 B.[0m
[1;92m[+] [0mLoaded a total of 6 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:testcase.txt'...[0m
[1;90m    len = 3, map size = 18, exec speed = 10313 us, hash = dcecfe8b41bb142f
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See /usr/local/share/doc/afl/fuzzing_in_depth.md#i-improve-the-speed[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 0 ignored, 1 total
[1;90m       Bitmap range : [0m18 to 18 bits (average: 18.00 bits)
[1;90m        Exec timing : [0m10.3k to 10.3k us (average: 10.3k us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 40 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=10313, hits=0, map=18, ascii=0, run_time=0:00:00:00)...[0m
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 17, executions: 12, exec/sec: 4.915
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=3755, hits=2, map=19, ascii=0, run_time=0:00:00:00)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=22, favorite=1, was_fuzzed=1, exec_us=3755, hits=2, map=19, ascii=0, run_time=0:00:00:00)...[0m
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 18, executions: 12, exec/sec: 4.665
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 19, executions: 12, exec/sec: 4.409
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 20, executions: 12, exec/sec: 4.184
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 21, executions: 12, exec/sec: 4.004
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 22, executions: 12, exec/sec: 3.816
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 23, executions: 12, exec/sec: 3.653
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 24, executions: 12, exec/sec: 3.498
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 25, executions: 12, exec/sec: 3.361
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 26, executions: 12, exec/sec: 3.243
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 27, executions: 12, exec/sec: 3.111
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 28, executions: 12, exec/sec: 2.992
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 29, executions: 12, exec/sec: 2.897
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 30, executions: 12, exec/sec: 2.790
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 31, executions: 12, exec/sec: 2.691
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 32, executions: 12, exec/sec: 2.604
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 33, executions: 12, exec/sec: 2.531
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 34, executions: 12, exec/sec: 2.451
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 35, executions: 12, exec/sec: 2.382
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 36, executions: 12, exec/sec: 2.319
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 37, executions: 12, exec/sec: 2.263
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 38, executions: 12, exec/sec: 2.203
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 39, executions: 12, exec/sec: 2.146
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 40, executions: 12, exec/sec: 2.076
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 41, executions: 12, exec/sec: 2.023
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 42, executions: 12, exec/sec: 1.970
[?25h[1;91m

+++ Testing aborted programmatically +++
[0m[1;94m[*] [0mStatistics: 11 new corpus items found, 39.71% coverage achieved, 1 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 0 min, 3 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 43, executions: 12, exec/sec: 1.925
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 44, executions: 12, exec/sec: 1.886
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 45, executions: 12, exec/sec: 1.847
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 46, executions: 12, exec/sec: 1.812
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 47, executions: 12, exec/sec: 1.769
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 48, executions: 12, exec/sec: 1.732
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 49, executions: 12, exec/sec: 1.695
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 50, executions: 12, exec/sec: 1.665
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 51, executions: 12, exec/sec: 1.633
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 52, executions: 12, exec/sec: 1.601
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 53, executions: 12, exec/sec: 1.571
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 54, executions: 12, exec/sec: 1.542
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 55, executions: 12, exec/sec: 1.513
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 56, executions: 12, exec/sec: 1.489
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 57, executions: 12, exec/sec: 1.465
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 58, executions: 12, exec/sec: 1.435
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 59, executions: 12, exec/sec: 1.411
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 60, executions: 12, exec/sec: 1.389
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 61, executions: 12, exec/sec: 1.369
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 62, executions: 12, exec/sec: 1.350
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 63, executions: 12, exec/sec: 1.329
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 64, executions: 12, exec/sec: 1.310
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 65, executions: 12, exec/sec: 1.290
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 66, executions: 12, exec/sec: 1.273
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 67, executions: 12, exec/sec: 1.255
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 68, executions: 12, exec/sec: 1.238
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 69, executions: 12, exec/sec: 1.221
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 70, executions: 12, exec/sec: 1.204
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 71, executions: 12, exec/sec: 1.188
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 72, executions: 12, exec/sec: 1.174
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 73, executions: 12, exec/sec: 1.159
Crash limit reached: 1
[1;94m[*] [0mFuzzing test case #7 (9 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=10907, hits=24, map=20, ascii=0, run_time=0:00:00:42)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=20, favorite=1, was_fuzzed=1, exec_us=3755, hits=1368, map=19, ascii=0, run_time=0:00:00:42)...[0m
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=20, favorite=1, was_fuzzed=1, exec_us=3755, hits=1394, map=19, ascii=0, run_time=0:00:00:43)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=20, favorite=1, was_fuzzed=1, exec_us=3755, hits=1413, map=19, ascii=0, run_time=0:00:00:44)...[0m
[1;94m[*] [0mFuzzing test case #7 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=2, favorite=1, was_fuzzed=1, exec_us=10907, hits=27, map=20, ascii=0, run_time=0:00:00:45)...[0m
[1;94m[*] [0mFuzzing test case #10 (13 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1233, hits=1, map=20, ascii=0, run_time=0:00:00:46)...[0m
[1;94m[*] [0mFuzzing test case #10 (13 total, 0 crashes saved, state: started :-), mode=explore, perf_score=2760, weight=318, favorite=1, was_fuzzed=1, exec_us=1233, hits=1, map=20, ascii=0, run_time=0:00:00:46)...[0m
[1;94m[*] [0mFuzzing test case #15 (20 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=2434, hits=1, map=21, ascii=0, run_time=0:00:02:15)...[0m
[1;94m[*] [0mFuzzing test case #19 (20 total, 0 crashes saved, state: started :-), mode=explore, perf_score=400, weight=108, favorite=1, was_fuzzed=0, exec_us=1354, hits=1, map=23, ascii=0, run_time=0:00:02:15)...[0m
[1;94m[*] [0mFuzzing test case #16 (23 total, 0 crashes saved, state: started :-), mode=explore, perf_score=400, weight=29, favorite=1, was_fuzzed=0, exec_us=1285, hits=12, map=20, ascii=0, run_time=0:00:02:17)...[0m
[1;94m[*] [0mFuzzing test case #21 (25 total, 0 crashes saved, state: started :-), mode=explore, perf_score=300, weight=105, favorite=1, was_fuzzed=0, exec_us=1343, hits=1, map=22, ascii=0, run_time=0:00:02:18)...[0m
[1;94m[*] [0mFuzzing test case #17 (25 total, 0 crashes saved, state: started :-), mode=explore, perf_score=300, weight=29, favorite=1, was_fuzzed=0, exec_us=1340, hits=7, map=20, ascii=0, run_time=0:00:02:19)...[0m
[1;94m[*] [0mFuzzing test case #10 (26 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=80, favorite=1, was_fuzzed=1, exec_us=1233, hits=408, map=20, ascii=0, run_time=0:00:02:20)...[0m
[1;94m[*] [0mFuzzing test case #15 (26 total, 0 crashes saved, state: started :-), mode=explore, perf_score=919, weight=22, favorite=1, was_fuzzed=1, exec_us=2434, hits=1, map=21, ascii=0, run_time=0:00:02:45)...[0m
[1;94m[*] [0mFuzzing test case #15 (26 total, 0 crashes saved, state: started :-), mode=explore, perf_score=919, weight=22, favorite=1, was_fuzzed=1, exec_us=2434, hits=107, map=21, ascii=0, run_time=0:00:02:46)...[0m
[1;94m[*] [0mFuzzing test case #10 (28 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=81, favorite=1, was_fuzzed=1, exec_us=1233, hits=438, map=20, ascii=0, run_time=0:00:02:49)...[0m
[1;94m[*] [0mFuzzing test case #28 (29 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1353, hits=1, map=23, ascii=0, run_time=0:00:03:10)...[0m
[1;94m[*] [0mFuzzing test case #28 (29 total, 0 crashes saved, state: started :-), mode=explore, perf_score=1380, weight=26, favorite=1, was_fuzzed=1, exec_us=1353, hits=1, map=23, ascii=0, run_time=0:00:03:10)...[0m
[1;94m[*] [0mFuzzing test case #31 (35 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1284, hits=8, map=21, ascii=0, run_time=0:00:03:40)...[0m
[1;94m[*] [0mFuzzing test case #26 (35 total, 0 crashes saved, state: started :-), mode=explore, perf_score=300, weight=4, favorite=0, was_fuzzed=0, exec_us=1309, hits=1, map=20, ascii=0, run_time=0:00:03:40)...[0m
[1;94m[*] [0mFuzzing test case #33 (36 total, 0 crashes saved, state: started :-), mode=explore, perf_score=300, weight=39, favorite=1, was_fuzzed=0, exec_us=1310, hits=2, map=23, ascii=0, run_time=0:00:03:40)...[0m
[1;94m[*] [0mFuzzing test case #10 (43 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=85, favorite=1, was_fuzzed=1, exec_us=1233, hits=461, map=20, ascii=0, run_time=0:00:04:09)...[0m
[1;94m[*] [0mFuzzing test case #10 (43 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=85, favorite=1, was_fuzzed=1, exec_us=1233, hits=463, map=20, ascii=0, run_time=0:00:04:09)...[0m
[1;94m[*] [0mFuzzing test case #17 (43 total, 0 crashes saved, state: started :-), mode=explore, perf_score=690, weight=10, favorite=1, was_fuzzed=1, exec_us=1340, hits=25, map=20, ascii=0, run_time=0:00:04:33)...[0m
[1;94m[*] [0mFuzzing test case #21 (43 total, 0 crashes saved, state: started :-), mode=explore, perf_score=1035, weight=25, favorite=1, was_fuzzed=1, exec_us=1343, hits=15, map=22, ascii=0, run_time=0:00:04:34)...[0m
[1;94m[*] [0mFuzzing test case #44 (45 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1265, hits=1, map=22, ascii=0, run_time=0:00:04:38)...[0m
[1;94m[*] [0mFuzzing test case #44 (45 total, 0 crashes saved, state: started :-), mode=explore, perf_score=1380, weight=56, favorite=1, was_fuzzed=1, exec_us=1265, hits=1, map=22, ascii=0, run_time=0:00:04:38)...[0m
[1;94m[*] [0mFuzzing test case #46 (47 total, 0 crashes saved, state: in progress, mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1190, hits=5, map=22, ascii=0, run_time=0:00:05:02)...[0m
[1;94m[*] [0mFuzzing test case #10 (47 total, 0 crashes saved, state: in progress, mode=explore, perf_score=345, weight=83, favorite=1, was_fuzzed=1, exec_us=1233, hits=479, map=20, ascii=0, run_time=0:00:05:02)...[0m
[1;94m[*] [0mFuzzing test case #33 (47 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=12, favorite=1, was_fuzzed=1, exec_us=1310, hits=244, map=23, ascii=0, run_time=0:00:05:03)...[0m
[1;94m[*] [0mFuzzing test case #44 (47 total, 0 crashes saved, state: in progress, mode=explore, perf_score=345, weight=8, favorite=1, was_fuzzed=1, exec_us=1265, hits=153, map=22, ascii=0, run_time=0:00:05:03)...[0m
[1;94m[*] [0mFuzzing test case #31 (48 total, 0 crashes saved, state: in progress, mode=explore, perf_score=459, weight=11, favorite=1, was_fuzzed=1, exec_us=1284, hits=18, map=21, ascii=0, run_time=0:00:05:04)...[0m
[1;94m[*] [0mFuzzing test case #33 (48 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=12, favorite=1, was_fuzzed=1, exec_us=1310, hits=255, map=23, ascii=0, run_time=0:00:05:05)...[0m
[1;94m[*] [0mFuzzing test case #10 (48 total, 0 crashes saved, state: in progress, mode=explore, perf_score=345, weight=84, favorite=1, was_fuzzed=1, exec_us=1233, hits=486, map=20, ascii=0, run_time=0:00:05:05)...[0m
[1;94m[*] [0mFuzzing test case #10 (50 total, 0 crashes saved, state: in progress, mode=explore, perf_score=345, weight=85, favorite=1, was_fuzzed=1, exec_us=1233, hits=489, map=20, ascii=0, run_time=0:00:05:06)...[0m
[1;94m[*] [0mFuzzing test case #10 (50 total, 0 crashes saved, state: in progress, mode=explore, perf_score=345, weight=85, favorite=1, was_fuzzed=1, exec_us=1233, hits=489, map=20, ascii=0, run_time=0:00:05:33)...[0m
[1;94m[*] [0mFuzzing test case #10 (50 total, 0 crashes saved, state: in progress, mode=explore, perf_score=345, weight=85, favorite=1, was_fuzzed=1, exec_us=1233, hits=490, map=20, ascii=0, run_time=0:00:05:34)...[0m
[1;94m[*] [0mFuzzing test case #10 (50 total, 0 crashes saved, state: in progress, mode=explore, perf_score=345, weight=85, favorite=1, was_fuzzed=1, exec_us=1233, hits=498, map=20, ascii=0, run_time=0:00:05:34)...[0m
[1;94m[*] [0mFuzzing test case #10 (50 total, 0 crashes saved, state: in progress, mode=explore, perf_score=345, weight=85, favorite=1, was_fuzzed=1, exec_us=1233, hits=501, map=20, ascii=0, run_time=0:00:05:35)...[0m
[1;94m[*] [0mFuzzing test case #10 (51 total, 0 crashes saved, state: in progress, mode=explore, perf_score=345, weight=85, favorite=1, was_fuzzed=1, exec_us=1233, hits=516, map=20, ascii=0, run_time=0:00:05:35)...[0m
[1;94m[*] [0mFuzzing test case #10 (51 total, 0 crashes saved, state: in progress, mode=explore, perf_score=345, weight=85, favorite=1, was_fuzzed=1, exec_us=1233, hits=519, map=20, ascii=0, run_time=0:00:05:36)...[0m
[1;94m[*] [0mFuzzing test case #16 (51 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=9, favorite=1, was_fuzzed=1, exec_us=1285, hits=41, map=20, ascii=0, run_time=0:00:05:37)...[0m
[1;94m[*] [0mFuzzing test case #10 (51 total, 0 crashes saved, state: in progress, mode=explore, perf_score=345, weight=85, favorite=1, was_fuzzed=1, exec_us=1233, hits=527, map=20, ascii=0, run_time=0:00:05:37)...[0m
[1;94m[*] [0mFuzzing test case #10 (51 total, 0 crashes saved, state: in progress, mode=explore, perf_score=345, weight=85, favorite=1, was_fuzzed=1, exec_us=1233, hits=536, map=20, ascii=0, run_time=0:00:05:38)...[0m
[1;94m[*] [0mFuzzing test case #19 (51 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=7, favorite=1, was_fuzzed=1, exec_us=1354, hits=278, map=23, ascii=0, run_time=0:00:05:38)...[0m
[1;94m[*] [0mFuzzing test case #46 (51 total, 0 crashes saved, state: in progress, mode=explore, perf_score=1552, weight=34, favorite=1, was_fuzzed=1, exec_us=1190, hits=6, map=22, ascii=0, run_time=0:00:05:39)...[0m
[1;94m[*] [0mFuzzing test case #53 (54 total, 0 crashes saved, state: in progress, mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1499, hits=1, map=24, ascii=0, run_time=0:00:06:09)...[0m
[1;94m[*] [0mFuzzing test case #44 (54 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=8, favorite=1, was_fuzzed=1, exec_us=1265, hits=181, map=22, ascii=0, run_time=0:00:06:09)...[0m
[1;94m[*] [0mFuzzing test case #10 (54 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=84, favorite=1, was_fuzzed=1, exec_us=1233, hits=553, map=20, ascii=0, run_time=0:00:06:10)...[0m
[1;94m[*] [0mFuzzing test case #53 (54 total, 0 crashes saved, state: in progress, mode=explore, perf_score=1380, weight=22, favorite=1, was_fuzzed=1, exec_us=1499, hits=4, map=24, ascii=0, run_time=0:00:06:10)...[0m
[?25h[1;91m

+++ Testing aborted programmatically +++
[0m[1;94m[*] [0mStatistics: 55 new corpus items found, 51.47% coverage achieved, 1 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 6 min, 37 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m

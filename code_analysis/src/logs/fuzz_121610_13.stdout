JOB timestamp: Mon Dec 18 15:28:05 MST 2023
JOB ID: 121624
Array Task ID: 13
Current directory: /lfs/koff9454.ui/projects/plc_runtime_fuzzer/code_analysis/src
r3i4n3
gcc (Spack GCC) 12.1.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Python 3.11.5
/lfs/koff9454.ui/miniconda3/envs/plc/bin/python
matiec version 0.1
changeset id: 
Number of programs: 3
Programs: condition_1 condition_2 condition_3
Fuzzing program: condition_2, Job ID: 13
input dir exist, skipping
harness file exist, skipping
Running the fuzzers
Workdir: "/lfs/koff9454.ui/projects/plc_runtime_fuzzer/code_analysis/src/programs/condition/condition_2/runs/run-13"
Out dir at "fuzzer-outdir" already exists.
Let's fuzz :)
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 0, objectives: 0, executions: 0, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 0, executions: 1, exec/sec: 0.000
We imported 1 inputs from disk.
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 1, executions: 1, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 2, executions: 1, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 3, executions: 1, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 4, executions: 1, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 5, executions: 1, exec/sec: 0.000
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 5, executions: 1, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 5, executions: 15, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 6, executions: 15, exec/sec: 0.000
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 7, executions: 15, exec/sec: 14.71
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 8, executions: 15, exec/sec: 12.99
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 9, executions: 15, exec/sec: 11.64
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 10, executions: 15, exec/sec: 10.52
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 11, executions: 15, exec/sec: 9.536
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 12, executions: 15, exec/sec: 8.657
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 13, executions: 15, exec/sec: 8.053
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 14, executions: 15, exec/sec: 7.432
[1;92m[+] [0mEnabled environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_IGNORE_SEED_PROBLEMS with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_PCM_DB=2, did you mean AFL_USE_PCM_DB=2?[0m
[0;36mafl-fuzz++4.09a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" EiÃŸfeldt[0m
[1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
[1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 36 CPU cores and 9 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/fuzzing_in_depth.md#c-using-multiple-cores[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, try binding to #12.[0m
[1;94m[*] [0mScanning 'our-indir'...[0m
[1;92m[+] [0mLoaded a total of 1 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mTarget map size: 74[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from 'our-inputs.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 80 extra tokens, size range 4 B to 6 B.[0m
[1;92m[+] [0mLoaded a total of 6 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:variables.txt'...[0m
[1;90m    len = 560, map size = 20, exec speed = 3044 us, hash = fe825d59491019c6
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 0 ignored, 1 total
[1;90m       Bitmap range : [0m20 to 20 bits (average: 20.00 bits)
[1;90m        Exec timing : [0m3044 to 3044 us (average: 3044 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 20 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=3044, hits=0, map=20, ascii=0, run_time=0:00:00:00)...[0m
[1;92m[+] [0mEnabled environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_IGNORE_SEED_PROBLEMS with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_PCM_DB=2, did you mean AFL_USE_PCM_DB=2?[0m
[0;36mafl-fuzz++4.09a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" EiÃŸfeldt[0m
[1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
[1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 36 CPU cores and 10 runnable tasks (utilization: 28%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/fuzzing_in_depth.md#c-using-multiple-cores[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, try binding to #12.[0m
[1;94m[*] [0mScanning 'afl-indir'...[0m
[1;92m[+] [0mLoaded a total of 1 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mTarget map size: 74[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from 'afl-inputs.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 80 extra tokens, size range 4 B to 6 B.[0m
[1;92m[+] [0mLoaded a total of 6 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:testcase.txt'...[0m
[1;90m    len = 3, map size = 19, exec speed = 7819 us, hash = ca589d48df9abc58
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 0 ignored, 1 total
[1;90m       Bitmap range : [0m19 to 19 bits (average: 19.00 bits)
[1;90m        Exec timing : [0m7819 to 7819 us (average: 7819 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 40 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=7819, hits=0, map=19, ascii=0, run_time=0:00:00:00)...[0m
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 15, executions: 15, exec/sec: 6.907
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 16, executions: 15, exec/sec: 6.500
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=7199, hits=3, map=20, ascii=0, run_time=0:00:00:00)...[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=14, favorite=1, was_fuzzed=1, exec_us=7819, hits=0, map=19, ascii=0, run_time=0:00:00:00)...[0m
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 17, executions: 15, exec/sec: 6.096
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 18, executions: 15, exec/sec: 5.780
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 19, executions: 15, exec/sec: 5.441
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 20, executions: 15, exec/sec: 5.180
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 21, executions: 15, exec/sec: 4.894
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 22, executions: 15, exec/sec: 4.677
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 23, executions: 15, exec/sec: 4.484
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 24, executions: 15, exec/sec: 4.294
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 25, executions: 15, exec/sec: 4.136
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 26, executions: 15, exec/sec: 3.983
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 27, executions: 15, exec/sec: 3.813
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 28, executions: 15, exec/sec: 3.686
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 29, executions: 15, exec/sec: 3.569
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 30, executions: 15, exec/sec: 3.443
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 31, executions: 15, exec/sec: 3.321
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 32, executions: 15, exec/sec: 3.226
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 33, executions: 15, exec/sec: 3.101
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 34, executions: 15, exec/sec: 3.013
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 35, executions: 15, exec/sec: 2.922
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 36, executions: 15, exec/sec: 2.838
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 37, executions: 15, exec/sec: 2.760
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 38, executions: 15, exec/sec: 2.692
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 39, executions: 15, exec/sec: 2.602
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 40, executions: 15, exec/sec: 2.543
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 41, executions: 15, exec/sec: 2.480
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 42, executions: 15, exec/sec: 2.423
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 43, executions: 15, exec/sec: 2.371
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 44, executions: 15, exec/sec: 2.318
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 45, executions: 15, exec/sec: 2.272
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 46, executions: 15, exec/sec: 2.229
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 47, executions: 15, exec/sec: 2.181
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 48, executions: 15, exec/sec: 2.134
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 49, executions: 15, exec/sec: 2.091
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 50, executions: 15, exec/sec: 2.052
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 51, executions: 15, exec/sec: 2.016
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 52, executions: 15, exec/sec: 1.980
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 53, executions: 15, exec/sec: 1.943
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 54, executions: 15, exec/sec: 1.905
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 55, executions: 15, exec/sec: 1.871
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 56, executions: 15, exec/sec: 1.840
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 57, executions: 15, exec/sec: 1.808
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 58, executions: 15, exec/sec: 1.782
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 59, executions: 15, exec/sec: 1.754
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 60, executions: 15, exec/sec: 1.727
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 61, executions: 15, exec/sec: 1.701
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 62, executions: 15, exec/sec: 1.676
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 63, executions: 15, exec/sec: 1.652
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 64, executions: 15, exec/sec: 1.626
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 65, executions: 15, exec/sec: 1.605
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 66, executions: 15, exec/sec: 1.582
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 67, executions: 15, exec/sec: 1.559
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 68, executions: 15, exec/sec: 1.539
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 69, executions: 15, exec/sec: 1.518
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 70, executions: 15, exec/sec: 1.499
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 71, executions: 15, exec/sec: 1.480
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 72, executions: 15, exec/sec: 1.461
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 73, executions: 15, exec/sec: 1.445
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 74, executions: 15, exec/sec: 1.427
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 75, executions: 15, exec/sec: 1.412
Crash limit reached: 1
[1;94m[*] [0mFuzzing test case #2 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=6120, hits=40, map=19, ascii=0, run_time=0:00:01:19)...[0m
[1;94m[*] [0mFuzzing test case #9 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=200, weight=38, favorite=1, was_fuzzed=0, exec_us=1646, hits=6, map=21, ascii=0, run_time=0:00:01:19)...[0m
[?25h[1;91m

+++ Testing aborted programmatically +++
[0m[1;94m[*] [0mStatistics: 29 new corpus items found, 45.95% coverage achieved, 1 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 2 min, 19 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m
[1;94m[*] [0mFuzzing test case #17 (22 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1639, hits=2, map=19, ascii=0, run_time=0:00:03:13)...[0m
[1;94m[*] [0mFuzzing test case #19 (22 total, 0 crashes saved, state: started :-), mode=explore, perf_score=150, weight=72, favorite=1, was_fuzzed=0, exec_us=1278, hits=1, map=23, ascii=0, run_time=0:00:03:13)...[0m
[1;94m[*] [0mFuzzing test case #22 (23 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1852, hits=1, map=22, ascii=0, run_time=0:00:03:14)...[0m
[1;94m[*] [0mFuzzing test case #13 (23 total, 0 crashes saved, state: started :-), mode=explore, perf_score=100, weight=14, favorite=1, was_fuzzed=0, exec_us=1777, hits=28, map=19, ascii=0, run_time=0:00:03:14)...[0m
[1;94m[*] [0mFuzzing test case #8 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=100, weight=10, favorite=1, was_fuzzed=0, exec_us=3710, hits=4, map=19, ascii=0, run_time=0:00:03:14)...[0m
[1;94m[*] [0mFuzzing test case #20 (25 total, 0 crashes saved, state: started :-), mode=explore, perf_score=150, weight=49, favorite=1, was_fuzzed=0, exec_us=1284, hits=1, map=24, ascii=0, run_time=0:00:03:15)...[0m
[1;94m[*] [0mFuzzing test case #20 (26 total, 0 crashes saved, state: started :-), mode=explore, perf_score=517, weight=28, favorite=1, was_fuzzed=1, exec_us=1284, hits=5, map=24, ascii=0, run_time=0:00:03:15)...[0m
[1;94m[*] [0mFuzzing test case #26 (37 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1265, hits=1, map=24, ascii=0, run_time=0:00:03:39)...[0m
[1;94m[*] [0mFuzzing test case #30 (37 total, 0 crashes saved, state: started :-), mode=explore, perf_score=300, weight=44, favorite=1, was_fuzzed=0, exec_us=1309, hits=1, map=24, ascii=0, run_time=0:00:03:39)...[0m
[1;94m[*] [0mFuzzing test case #17 (38 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=8, favorite=1, was_fuzzed=1, exec_us=1639, hits=14, map=19, ascii=0, run_time=0:00:03:41)...[0m
[1;94m[*] [0mFuzzing test case #19 (40 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=23, favorite=1, was_fuzzed=1, exec_us=1278, hits=3, map=23, ascii=0, run_time=0:00:04:04)...[0m
[1;94m[*] [0mFuzzing test case #26 (42 total, 0 crashes saved, state: started :-), mode=explore, perf_score=919, weight=48, favorite=1, was_fuzzed=1, exec_us=1265, hits=1, map=24, ascii=0, run_time=0:00:04:06)...[0m
[1;94m[*] [0mFuzzing test case #44 (45 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1237, hits=1, map=25, ascii=0, run_time=0:00:04:34)...[0m
[1;94m[*] [0mFuzzing test case #26 (45 total, 0 crashes saved, state: started :-), mode=explore, perf_score=229, weight=13, favorite=1, was_fuzzed=1, exec_us=1265, hits=465, map=24, ascii=0, run_time=0:00:04:34)...[0m
[1;94m[*] [0mFuzzing test case #13 (45 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=64, favorite=1, was_fuzzed=1, exec_us=1777, hits=49, map=19, ascii=0, run_time=0:00:04:35)...[0m
[1;94m[*] [0mFuzzing test case #20 (45 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=9, favorite=1, was_fuzzed=1, exec_us=1284, hits=44, map=24, ascii=0, run_time=0:00:04:35)...[0m
[1;94m[*] [0mFuzzing test case #26 (45 total, 0 crashes saved, state: started :-), mode=explore, perf_score=229, weight=13, favorite=1, was_fuzzed=1, exec_us=1265, hits=471, map=24, ascii=0, run_time=0:00:04:35)...[0m
[1;94m[*] [0mFuzzing test case #19 (45 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=13, favorite=1, was_fuzzed=1, exec_us=1278, hits=54, map=23, ascii=0, run_time=0:00:04:36)...[0m
[1;94m[*] [0mFuzzing test case #20 (45 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=9, favorite=1, was_fuzzed=1, exec_us=1284, hits=52, map=24, ascii=0, run_time=0:00:04:37)...[0m
[1;94m[*] [0mFuzzing test case #20 (45 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=9, favorite=1, was_fuzzed=1, exec_us=1284, hits=57, map=24, ascii=0, run_time=0:00:04:37)...[0m
[1;94m[*] [0mFuzzing test case #13 (45 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=64, favorite=1, was_fuzzed=1, exec_us=1777, hits=67, map=19, ascii=0, run_time=0:00:04:37)...[0m
[1;94m[*] [0mFuzzing test case #19 (46 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=13, favorite=1, was_fuzzed=1, exec_us=1278, hits=69, map=23, ascii=0, run_time=0:00:04:38)...[0m
[1;94m[*] [0mFuzzing test case #22 (47 total, 0 crashes saved, state: started :-), mode=explore, perf_score=690, weight=9, favorite=1, was_fuzzed=1, exec_us=1852, hits=5, map=22, ascii=0, run_time=0:00:04:38)...[0m
[1;94m[*] [0mFuzzing test case #13 (48 total, 0 crashes saved, state: in progress, mode=explore, perf_score=114, weight=61, favorite=1, was_fuzzed=1, exec_us=1777, hits=86, map=19, ascii=0, run_time=0:00:05:00)...[0m
[1;94m[*] [0mFuzzing test case #13 (48 total, 0 crashes saved, state: in progress, mode=explore, perf_score=114, weight=61, favorite=1, was_fuzzed=1, exec_us=1777, hits=91, map=19, ascii=0, run_time=0:00:05:01)...[0m
[1;94m[*] [0mFuzzing test case #13 (48 total, 0 crashes saved, state: in progress, mode=explore, perf_score=114, weight=61, favorite=1, was_fuzzed=1, exec_us=1777, hits=108, map=19, ascii=0, run_time=0:00:05:01)...[0m
[1;94m[*] [0mFuzzing test case #44 (48 total, 0 crashes saved, state: in progress, mode=explore, perf_score=919, weight=24, favorite=1, was_fuzzed=1, exec_us=1237, hits=1, map=25, ascii=0, run_time=0:00:05:01)...[0m
[1;94m[*] [0mFuzzing test case #26 (49 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=14, favorite=1, was_fuzzed=1, exec_us=1265, hits=530, map=24, ascii=0, run_time=0:00:05:06)...[0m
[1;94m[*] [0mFuzzing test case #49 (50 total, 0 crashes saved, state: in progress, mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1202, hits=1, map=24, ascii=0, run_time=0:00:05:34)...[0m
[1;94m[*] [0mFuzzing test case #49 (50 total, 0 crashes saved, state: in progress, mode=explore, perf_score=919, weight=24, favorite=1, was_fuzzed=1, exec_us=1202, hits=1, map=24, ascii=0, run_time=0:00:05:34)...[0m
[?25h[1;91m

+++ Testing aborted programmatically +++
[0m[1;94m[*] [0mStatistics: 52 new corpus items found, 47.30% coverage achieved, 1 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 5 min, 37 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m

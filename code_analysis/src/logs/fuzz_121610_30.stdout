JOB timestamp: Mon Dec 18 15:28:05 MST 2023
JOB ID: 121610
Array Task ID: 30
Current directory: /lfs/koff9454.ui/projects/plc_runtime_fuzzer/code_analysis/src
r4i1n1
gcc (Spack GCC) 12.1.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Python 3.11.5
/lfs/koff9454.ui/miniconda3/envs/plc/bin/python
matiec version 0.1
changeset id: 
Number of programs: 3
Programs: condition_1 condition_2 condition_3
Fuzzing program: condition_1, Job ID: 30
input dir exist, skipping
harness file exist, skipping
Running the fuzzers
Workdir: "/lfs/koff9454.ui/projects/plc_runtime_fuzzer/code_analysis/src/programs/condition/condition_1/runs/run-30"
Out dir at "fuzzer-outdir" already exists.
Let's fuzz :)
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 0, objectives: 0, executions: 0, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 0, executions: 1, exec/sec: 0.000
We imported 1 inputs from disk.
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 1, executions: 1, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 2, executions: 1, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 3, executions: 1, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 4, executions: 1, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 5, executions: 1, exec/sec: 0.000
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 5, executions: 1, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 5, executions: 15, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 6, executions: 15, exec/sec: 0.000
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 7, executions: 15, exec/sec: 14.86
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 8, executions: 15, exec/sec: 13.05
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 9, executions: 15, exec/sec: 11.66
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 10, executions: 15, exec/sec: 10.43
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 11, executions: 15, exec/sec: 9.549
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 12, executions: 15, exec/sec: 8.666
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 13, executions: 15, exec/sec: 8.066
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 14, executions: 15, exec/sec: 7.424
[1;92m[+] [0mEnabled environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_IGNORE_SEED_PROBLEMS with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_PCM_DB=2, did you mean AFL_USE_PCM_DB=2?[0m
[0;36mafl-fuzz++4.09a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" EiÃŸfeldt[0m
[1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
[1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 36 CPU cores and 12 runnable tasks (utilization: 33%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/fuzzing_in_depth.md#c-using-multiple-cores[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, try binding to #7.[0m
[1;94m[*] [0mScanning 'afl-indir'...[0m
[1;92m[+] [0mLoaded a total of 1 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mTarget map size: 68[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from 'afl-inputs.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 88 extra tokens, size range 4 B to 6 B.[0m
[1;92m[+] [0mLoaded a total of 6 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:testcase.txt'...[0m
[1;90m    len = 3, map size = 18, exec speed = 3239 us, hash = dcecfe8b41bb142f
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 0 ignored, 1 total
[1;90m       Bitmap range : [0m18 to 18 bits (average: 18.00 bits)
[1;90m        Exec timing : [0m3239 to 3239 us (average: 3239 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 20 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=3239, hits=0, map=18, ascii=0, run_time=0:00:00:00)...[0m
[1;92m[+] [0mEnabled environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_IGNORE_SEED_PROBLEMS with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_PCM_DB=2, did you mean AFL_USE_PCM_DB=2?[0m
[0;36mafl-fuzz++4.09a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" EiÃŸfeldt[0m
[1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
[1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 36 CPU cores and 10 runnable tasks (utilization: 28%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/fuzzing_in_depth.md#c-using-multiple-cores[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, try binding to #6.[0m
[1;94m[*] [0mScanning 'our-indir'...[0m
[1;92m[+] [0mLoaded a total of 1 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mTarget map size: 68[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from 'our-inputs.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 88 extra tokens, size range 4 B to 6 B.[0m
[1;92m[+] [0mLoaded a total of 6 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:variables.txt'...[0m
[1;90m    len = 616, map size = 19, exec speed = 8139 us, hash = 64e735e0cc07a8c6
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 0 ignored, 1 total
[1;90m       Bitmap range : [0m19 to 19 bits (average: 19.00 bits)
[1;90m        Exec timing : [0m8139 to 8139 us (average: 8139 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 60 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=8139, hits=0, map=19, ascii=0, run_time=0:00:00:00)...[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=10, favorite=1, was_fuzzed=1, exec_us=3239, hits=0, map=18, ascii=0, run_time=0:00:00:00)...[0m
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 15, executions: 15, exec/sec: 6.924
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 16, executions: 15, exec/sec: 6.450
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 17, executions: 15, exec/sec: 6.063
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 18, executions: 15, exec/sec: 5.729
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 19, executions: 15, exec/sec: 5.420
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 20, executions: 15, exec/sec: 5.159
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 21, executions: 15, exec/sec: 4.903
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 22, executions: 15, exec/sec: 4.706
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 23, executions: 15, exec/sec: 4.489
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 24, executions: 15, exec/sec: 4.314
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 25, executions: 15, exec/sec: 4.143
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 26, executions: 15, exec/sec: 3.977
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 27, executions: 15, exec/sec: 3.830
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 28, executions: 15, exec/sec: 3.707
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 29, executions: 15, exec/sec: 3.588
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 30, executions: 15, exec/sec: 3.464
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 31, executions: 15, exec/sec: 3.365
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 32, executions: 15, exec/sec: 3.274
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 33, executions: 15, exec/sec: 3.184
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 34, executions: 15, exec/sec: 3.087
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 35, executions: 15, exec/sec: 2.984
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 36, executions: 15, exec/sec: 2.903
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 37, executions: 15, exec/sec: 2.830
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 38, executions: 15, exec/sec: 2.763
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 39, executions: 15, exec/sec: 2.696
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 40, executions: 15, exec/sec: 2.609
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 41, executions: 15, exec/sec: 2.548
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 42, executions: 15, exec/sec: 2.491
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 43, executions: 15, exec/sec: 2.436
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 44, executions: 15, exec/sec: 2.377
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 45, executions: 15, exec/sec: 2.321
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 46, executions: 15, exec/sec: 2.273
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 47, executions: 15, exec/sec: 2.225
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 48, executions: 15, exec/sec: 2.177
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 49, executions: 15, exec/sec: 2.135
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 50, executions: 15, exec/sec: 2.091
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 51, executions: 15, exec/sec: 2.054
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 52, executions: 15, exec/sec: 2.016
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 53, executions: 15, exec/sec: 1.977
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 54, executions: 15, exec/sec: 1.943
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 55, executions: 15, exec/sec: 1.904
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 56, executions: 15, exec/sec: 1.872
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 57, executions: 15, exec/sec: 1.839
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 58, executions: 15, exec/sec: 1.808
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 59, executions: 15, exec/sec: 1.774
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 60, executions: 15, exec/sec: 1.749
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 61, executions: 15, exec/sec: 1.722
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 62, executions: 15, exec/sec: 1.695
[Objective #0] run time: 0h-0m-8s, clients: 1, corpus: 2, objectives: 63, executions: 15, exec/sec: 1.672
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 64, executions: 15, exec/sec: 1.646
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 65, executions: 15, exec/sec: 1.622
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 66, executions: 15, exec/sec: 1.598
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 67, executions: 15, exec/sec: 1.573
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 68, executions: 15, exec/sec: 1.549
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 69, executions: 15, exec/sec: 1.528
[Objective #0] run time: 0h-0m-9s, clients: 1, corpus: 2, objectives: 70, executions: 15, exec/sec: 1.508
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 71, executions: 15, exec/sec: 1.485
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 72, executions: 15, exec/sec: 1.465
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 73, executions: 15, exec/sec: 1.447
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 74, executions: 15, exec/sec: 1.428
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 75, executions: 15, exec/sec: 1.404
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 76, executions: 15, exec/sec: 1.384
[Objective #0] run time: 0h-0m-10s, clients: 1, corpus: 2, objectives: 77, executions: 15, exec/sec: 1.370
[Objective #0] run time: 0h-0m-11s, clients: 1, corpus: 2, objectives: 78, executions: 15, exec/sec: 1.354
Crash limit reached: 1
[?25h[1;91m

+++ Testing aborted programmatically +++
[0m[1;94m[*] [0mStatistics: 17 new corpus items found, 41.18% coverage achieved, 1 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 0 min, 11 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=2086, hits=891, map=19, ascii=0, run_time=0:00:01:19)...[0m
[1;94m[*] [0mFuzzing test case #2 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=100, weight=5, favorite=1, was_fuzzed=0, exec_us=6086, hits=13, map=18, ascii=0, run_time=0:00:01:19)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=901, map=19, ascii=0, run_time=0:00:01:19)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=933, map=19, ascii=0, run_time=0:00:01:20)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=979, map=19, ascii=0, run_time=0:00:01:20)...[0m
[1;94m[*] [0mFuzzing test case #9 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=200, weight=5, favorite=0, was_fuzzed=0, exec_us=1145, hits=17, map=19, ascii=0, run_time=0:00:01:20)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1054, map=19, ascii=0, run_time=0:00:01:47)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1087, map=19, ascii=0, run_time=0:00:01:47)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1125, map=19, ascii=0, run_time=0:00:01:48)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1198, map=19, ascii=0, run_time=0:00:01:48)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1258, map=19, ascii=0, run_time=0:00:01:48)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #2 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=2, favorite=1, was_fuzzed=1, exec_us=6086, hits=54, map=18, ascii=0, run_time=0:00:01:49)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1342, map=19, ascii=0, run_time=0:00:01:49)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1398, map=19, ascii=0, run_time=0:00:01:49)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1472, map=19, ascii=0, run_time=0:00:01:50)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1512, map=19, ascii=0, run_time=0:00:01:50)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1580, map=19, ascii=0, run_time=0:00:01:50)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1637, map=19, ascii=0, run_time=0:00:01:50)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1676, map=19, ascii=0, run_time=0:00:01:51)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1722, map=19, ascii=0, run_time=0:00:01:51)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1796, map=19, ascii=0, run_time=0:00:01:51)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1841, map=19, ascii=0, run_time=0:00:01:52)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1915, map=19, ascii=0, run_time=0:00:01:52)...[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=1973, map=19, ascii=0, run_time=0:00:01:52)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #1 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=172, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=2035, map=19, ascii=0, run_time=0:00:01:52)...[0m
[1;94m[*] [0mFuzzing test case #10 (11 total, 0 crashes saved, state: started :-), mode=explore, perf_score=300, weight=4, favorite=0, was_fuzzed=0, exec_us=1596, hits=3, map=19, ascii=0, run_time=0:00:01:53)...[0m
[1;94m[*] [0mFuzzing test case #16 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1329, hits=5, map=18, ascii=0, run_time=0:00:03:15)...[0m
[1;94m[*] [0mFuzzing test case #15 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=600, weight=18, favorite=1, was_fuzzed=0, exec_us=1517, hits=11, map=18, ascii=0, run_time=0:00:03:15)...[0m
[1;94m[*] [0mFuzzing test case #14 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=600, weight=16, favorite=1, was_fuzzed=0, exec_us=1470, hits=25, map=20, ascii=0, run_time=0:00:03:37)...[0m
[1;94m[*] [0mFuzzing test case #13 (22 total, 0 crashes saved, state: started :-), mode=explore, perf_score=600, weight=20, favorite=1, was_fuzzed=0, exec_us=1511, hits=7, map=18, ascii=0, run_time=0:00:04:04)...[0m
[1;94m[*] [0mFuzzing test case #16 (23 total, 0 crashes saved, state: started :-), mode=explore, perf_score=1035, weight=12, favorite=1, was_fuzzed=1, exec_us=1329, hits=5, map=18, ascii=0, run_time=0:00:04:06)...[0m
[1;94m[*] [0mFuzzing test case #15 (23 total, 0 crashes saved, state: started :-), mode=explore, perf_score=229, weight=6, favorite=1, was_fuzzed=1, exec_us=1517, hits=58, map=18, ascii=0, run_time=0:00:04:34)...[0m
[1;94m[*] [0mFuzzing test case #1 (23 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=3277, map=19, ascii=0, run_time=0:00:04:35)...[0m
[1;94m[*] [0mFuzzing test case #1 (23 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=3308, map=19, ascii=0, run_time=0:00:04:35)...[0m
[1;94m[*] [0mFuzzing test case #1 (23 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=3350, map=19, ascii=0, run_time=0:00:04:35)...[0m
[1;94m[*] [0mFuzzing test case #14 (23 total, 0 crashes saved, state: started :-), mode=explore, perf_score=229, weight=6, favorite=1, was_fuzzed=1, exec_us=1470, hits=151, map=20, ascii=0, run_time=0:00:04:35)...[0m
[1;94m[*] [0mFuzzing test case #15 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=229, weight=6, favorite=1, was_fuzzed=1, exec_us=1517, hits=123, map=18, ascii=0, run_time=0:00:04:36)...[0m
[1;94m[*] [0mFuzzing test case #1 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=3421, map=19, ascii=0, run_time=0:00:04:37)...[0m
[1;94m[*] [0mFuzzing test case #1 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=3471, map=19, ascii=0, run_time=0:00:04:37)...[0m
[1;94m[*] [0mFuzzing test case #1 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=3509, map=19, ascii=0, run_time=0:00:04:37)...[0m
[1;94m[*] [0mFuzzing test case #1 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=29, favorite=1, was_fuzzed=1, exec_us=2086, hits=3548, map=19, ascii=0, run_time=0:00:04:37)...[0m
[1;94m[*] [0mFuzzing test case #15 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=229, weight=6, favorite=1, was_fuzzed=1, exec_us=1517, hits=134, map=18, ascii=0, run_time=0:00:04:37)...[0m
[1;94m[*] [0mFuzzing test case #24 (25 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1257, hits=1, map=23, ascii=0, run_time=0:00:04:38)...[0m
[1;94m[*] [0mFuzzing test case #1 (25 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=26, favorite=1, was_fuzzed=1, exec_us=2086, hits=3582, map=19, ascii=0, run_time=0:00:04:38)...[0m
[1;94m[*] [0mFuzzing test case #24 (25 total, 0 crashes saved, state: started :-), mode=explore, perf_score=2760, weight=43, favorite=1, was_fuzzed=1, exec_us=1257, hits=1, map=23, ascii=0, run_time=0:00:04:39)...[0m
[1;94m[*] [0mFuzzing test case #29 (34 total, 0 crashes saved, state: in progress, mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1249, hits=1, map=21, ascii=0, run_time=0:00:06:37)...[0m
[1;94m[*] [0mFuzzing test case #27 (34 total, 0 crashes saved, state: in progress, mode=explore, perf_score=400, weight=21, favorite=1, was_fuzzed=0, exec_us=1259, hits=11, map=23, ascii=0, run_time=0:00:06:37)...[0m
[1;94m[*] [0mFuzzing test case #28 (34 total, 0 crashes saved, state: in progress, mode=explore, perf_score=400, weight=23, favorite=1, was_fuzzed=0, exec_us=1265, hits=7, map=23, ascii=0, run_time=0:00:06:38)...[0m
[1;94m[*] [0mFuzzing test case #13 (37 total, 0 crashes saved, state: in progress, mode=explore, perf_score=459, weight=7, favorite=1, was_fuzzed=1, exec_us=1511, hits=29, map=18, ascii=0, run_time=0:00:06:41)...[0m
[1;94m[*] [0mFuzzing test case #24 (38 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=11, favorite=1, was_fuzzed=1, exec_us=1257, hits=2024, map=23, ascii=0, run_time=0:00:06:54)...[0m
[1;94m[*] [0mFuzzing test case #38 (39 total, 0 crashes saved, state: in progress, mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1366, hits=1, map=23, ascii=0, run_time=0:00:07:13)...[0m
[1;94m[*] [0mFuzzing test case #29 (39 total, 0 crashes saved, state: in progress, mode=explore, perf_score=919, weight=16, favorite=1, was_fuzzed=1, exec_us=1249, hits=2, map=21, ascii=0, run_time=0:00:07:13)...[0m
[1;94m[*] [0mFuzzing test case #38 (39 total, 0 crashes saved, state: in progress, mode=explore, perf_score=1839, weight=19, favorite=1, was_fuzzed=1, exec_us=1366, hits=1, map=23, ascii=0, run_time=0:00:07:17)...[0m
[1;94m[*] [0mFuzzing test case #14 (43 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=5, favorite=1, was_fuzzed=1, exec_us=1470, hits=219, map=20, ascii=0, run_time=0:00:08:10)...[0m
[1;94m[*] [0mFuzzing test case #37 (46 total, 0 crashes saved, state: in progress, mode=explore, perf_score=200, weight=1, favorite=0, was_fuzzed=0, exec_us=1397, hits=12, map=21, ascii=0, run_time=0:00:08:23)...[0m
[1;94m[*] [0mFuzzing test case #13 (47 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=6, favorite=1, was_fuzzed=1, exec_us=1511, hits=53, map=18, ascii=0, run_time=0:00:08:23)...[0m
[1;94m[*] [0mFuzzing test case #28 (47 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=7, favorite=1, was_fuzzed=1, exec_us=1265, hits=97, map=23, ascii=0, run_time=0:00:08:24)...[0m
[1;94m[*] [0mFuzzing test case #15 (47 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=5, favorite=1, was_fuzzed=1, exec_us=1517, hits=155, map=18, ascii=0, run_time=0:00:08:25)...[0m
[1;94m[*] [0mFuzzing test case #47 (48 total, 0 crashes saved, state: in progress, mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1245, hits=1, map=24, ascii=0, run_time=0:00:08:26)...[0m
[1;94m[*] [0mFuzzing test case #27 (48 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=7, favorite=1, was_fuzzed=1, exec_us=1259, hits=183, map=23, ascii=0, run_time=0:00:08:38)...[0m
[1;94m[*] [0mFuzzing test case #16 (48 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=5, favorite=1, was_fuzzed=1, exec_us=1329, hits=248, map=18, ascii=0, run_time=0:00:08:39)...[0m
[1;94m[*] [0mFuzzing test case #38 (48 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=5, favorite=1, was_fuzzed=1, exec_us=1366, hits=491, map=23, ascii=0, run_time=0:00:08:40)...[0m
[1;94m[*] [0mFuzzing test case #14 (48 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=5, favorite=1, was_fuzzed=1, exec_us=1470, hits=252, map=20, ascii=0, run_time=0:00:08:41)...[0m
[1;94m[*] [0mFuzzing test case #24 (48 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=11, favorite=1, was_fuzzed=1, exec_us=1257, hits=2093, map=23, ascii=0, run_time=0:00:08:42)...[0m
[1;94m[*] [0mFuzzing test case #28 (48 total, 0 crashes saved, state: in progress, mode=explore, perf_score=229, weight=7, favorite=1, was_fuzzed=1, exec_us=1265, hits=127, map=23, ascii=0, run_time=0:00:08:43)...[0m
[1;94m[*] [0mFuzzing test case #47 (49 total, 0 crashes saved, state: in progress, mode=explore, perf_score=690, weight=13, favorite=1, was_fuzzed=1, exec_us=1245, hits=5, map=24, ascii=0, run_time=0:00:08:44)...[0m
[?25h[1;91m

+++ Testing aborted programmatically +++
[0m[1;94m[*] [0mStatistics: 50 new corpus items found, 48.53% coverage achieved, 1 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 8 min, 46 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m

JOB timestamp: Mon Dec 18 15:28:05 MST 2023
JOB ID: 121613
Array Task ID: 2
Current directory: /lfs/koff9454.ui/projects/plc_runtime_fuzzer/code_analysis/src
r2i1n4
gcc (Spack GCC) 12.1.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Python 3.11.5
/lfs/koff9454.ui/miniconda3/envs/plc/bin/python
matiec version 0.1
changeset id: 
Number of programs: 3
Programs: condition_1 condition_2 condition_3
Fuzzing program: condition_3, Job ID: 2
input dir exist, skipping
harness file exist, skipping
Running the fuzzers
Workdir: "/lfs/koff9454.ui/projects/plc_runtime_fuzzer/code_analysis/src/programs/condition/condition_3/runs/run-2"
Out dir at "fuzzer-outdir" already exists.
Let's fuzz :)
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 0, objectives: 0, executions: 0, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 0, executions: 1, exec/sec: 0.000
We imported 1 inputs from disk.
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 1, executions: 1, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 2, executions: 1, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 3, executions: 1, exec/sec: 0.000
[Stats #0] run time: 0h-0m-0s, clients: 1, corpus: 1, objectives: 3, executions: 1, exec/sec: 0.000
[Testcase #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 3, executions: 13, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 4, executions: 13, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 5, executions: 13, exec/sec: 0.000
[Objective #0] run time: 0h-0m-0s, clients: 1, corpus: 2, objectives: 6, executions: 13, exec/sec: 0.000
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 7, executions: 13, exec/sec: 12.98
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 8, executions: 13, exec/sec: 11.47
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 9, executions: 13, exec/sec: 10.27
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 10, executions: 13, exec/sec: 9.279
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 11, executions: 13, exec/sec: 8.531
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 12, executions: 13, exec/sec: 7.837
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 13, executions: 13, exec/sec: 7.198
[Objective #0] run time: 0h-0m-1s, clients: 1, corpus: 2, objectives: 14, executions: 13, exec/sec: 6.707
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 15, executions: 13, exec/sec: 6.224
[1;92m[+] [0mEnabled environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_IGNORE_SEED_PROBLEMS with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_PCM_DB=2, did you mean AFL_USE_PCM_DB=2?[0m
[0;36mafl-fuzz++4.09a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" EiÃŸfeldt[0m
[1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
[1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 36 CPU cores and 8 runnable tasks (utilization: 22%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/fuzzing_in_depth.md#c-using-multiple-cores[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, try binding to #0.[0m
[1;94m[*] [0mScanning 'afl-indir'...[0m
[1;92m[+] [0mLoaded a total of 1 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mTarget map size: 75[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from 'afl-inputs.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 80 extra tokens, size range 4 B to 6 B.[0m
[1;92m[+] [0mLoaded a total of 6 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:testcase.txt'...[0m
[1;90m    len = 3, map size = 22, exec speed = 6944 us, hash = f12e82753eb161b5
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 0 ignored, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m6944 to 6944 us (average: 6944 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 40 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=6944, hits=0, map=22, ascii=0, run_time=0:00:00:00)...[0m
[1;92m[+] [0mEnabled environment variable AFL_BENCH_UNTIL_CRASH with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_IGNORE_SEED_PROBLEMS with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
[1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
[1;93m[!] [1;97mWARNING: [0mPotentially mistyped AFL environment variable: USE_PCM_DB=2, did you mean AFL_USE_PCM_DB=2?[0m
[0;36mafl-fuzz++4.09a[0m based on afl by Michal Zalewski and a large online community
[1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" EiÃŸfeldt[0m
[1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
[1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
[1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
[1;94m[*] [0mGetting to work...[0m
[1;92m[+] [0mUsing exponential power schedule (FAST)[0m
[1;92m[+] [0mEnabled testcache with 50 MB[0m
[1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.
    If you're just testing, set 'AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1'.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 36 CPU cores and 7 runnable tasks (utilization: 19%).[0m
[1;92m[+] [0mTry parallel jobs - see /usr/local/share/doc/afl/fuzzing_in_depth.md#c-using-multiple-cores[0m
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, try binding to #0.[0m
[1;94m[*] [0mScanning 'our-indir'...[0m
[1;92m[+] [0mLoaded a total of 1 seeds.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;94m[*] [0mTarget map size: 75[0m
[1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mLoading extra dictionary from 'our-inputs.dict' (level 0)...[0m
[1;94m[*] [0mLoaded 80 extra tokens, size range 4 B to 6 B.[0m
[1;92m[+] [0mLoaded a total of 6 extras.[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:variables.txt'...[0m
[1;90m    len = 560, map size = 23, exec speed = 5593 us, hash = 9b4849e5a795fa70
[0m[1;92m[+] [0mAll test cases processed.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 0 ignored, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m5593 to 5593 us (average: 5593 us)
[0m
[1;94m[*] [0mNo -t option specified, so I'll use an exec timeout of 40 ms.[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=5593, hits=0, map=23, ascii=0, run_time=0:00:00:00)...[0m
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 16, executions: 13, exec/sec: 5.826
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 crashes saved, state: started :-), mode=explore, perf_score=459, weight=10, favorite=1, was_fuzzed=1, exec_us=6944, hits=0, map=22, ascii=0, run_time=0:00:00:00)...[0m
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 17, executions: 13, exec/sec: 5.420
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 18, executions: 13, exec/sec: 5.109
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 19, executions: 13, exec/sec: 4.856
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 20, executions: 13, exec/sec: 4.592
[Objective #0] run time: 0h-0m-2s, clients: 1, corpus: 2, objectives: 21, executions: 13, exec/sec: 4.386
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 22, executions: 13, exec/sec: 4.198
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 23, executions: 13, exec/sec: 4.018
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 24, executions: 13, exec/sec: 3.842
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 25, executions: 13, exec/sec: 3.674
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 26, executions: 13, exec/sec: 3.513
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 27, executions: 13, exec/sec: 3.390
[Objective #0] run time: 0h-0m-3s, clients: 1, corpus: 2, objectives: 28, executions: 13, exec/sec: 3.266
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 29, executions: 13, exec/sec: 3.150
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 30, executions: 13, exec/sec: 3.034
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 31, executions: 13, exec/sec: 2.936
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 32, executions: 13, exec/sec: 2.835
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 33, executions: 13, exec/sec: 2.752
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 34, executions: 13, exec/sec: 2.673
[Objective #0] run time: 0h-0m-4s, clients: 1, corpus: 2, objectives: 35, executions: 13, exec/sec: 2.605
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 36, executions: 13, exec/sec: 2.537
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 37, executions: 13, exec/sec: 2.471
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 38, executions: 13, exec/sec: 2.413
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 39, executions: 13, exec/sec: 2.343
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 40, executions: 13, exec/sec: 2.288
[Objective #0] run time: 0h-0m-5s, clients: 1, corpus: 2, objectives: 41, executions: 13, exec/sec: 2.220
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 42, executions: 13, exec/sec: 2.162
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 43, executions: 13, exec/sec: 2.117
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 44, executions: 13, exec/sec: 2.075
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 45, executions: 13, exec/sec: 2.030
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 46, executions: 13, exec/sec: 1.984
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 47, executions: 13, exec/sec: 1.941
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 48, executions: 13, exec/sec: 1.900
[Objective #0] run time: 0h-0m-6s, clients: 1, corpus: 2, objectives: 49, executions: 13, exec/sec: 1.859
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 50, executions: 13, exec/sec: 1.822
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 51, executions: 13, exec/sec: 1.789
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 52, executions: 13, exec/sec: 1.760
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 53, executions: 13, exec/sec: 1.727
[Objective #0] run time: 0h-0m-7s, clients: 1, corpus: 2, objectives: 54, executions: 13, exec/sec: 1.699
Crash limit reached: 1
[1;94m[*] [0mFuzzing test case #1 (9 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=2698, hits=952, map=23, ascii=0, run_time=0:00:01:20)...[0m
[1;94m[*] [0mFuzzing test case #2 (9 total, 0 crashes saved, state: started :-), mode=explore, perf_score=100, weight=4, favorite=1, was_fuzzed=0, exec_us=6967, hits=42, map=22, ascii=0, run_time=0:00:01:20)...[0m
[1;94m[*] [0mFuzzing test case #1 (10 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=25, favorite=1, was_fuzzed=1, exec_us=2698, hits=985, map=23, ascii=0, run_time=0:00:01:20)...[0m
[1;94m[*] [0mFuzzing test case #2 (12 total, 0 crashes saved, state: started :-), mode=explore, perf_score=86, weight=2, favorite=1, was_fuzzed=1, exec_us=6967, hits=60, map=22, ascii=0, run_time=0:00:01:47)...[0m
[1;94m[*] [0mFuzzing test case #1 (12 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=26, favorite=1, was_fuzzed=1, exec_us=2698, hits=1046, map=23, ascii=0, run_time=0:00:01:47)...[0m
[?25h[1;91m

+++ Testing aborted programmatically +++
[0m[1;94m[*] [0mStatistics: 19 new corpus items found, 45.33% coverage achieved, 1 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 1 min, 47 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m
[1;94m[*] [0mFuzzing test case #1 (12 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=26, favorite=1, was_fuzzed=1, exec_us=2698, hits=1081, map=23, ascii=0, run_time=0:00:01:48)...[0m
[1;94m[*] [0mFuzzing test case #1 (12 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=26, favorite=1, was_fuzzed=1, exec_us=2698, hits=1106, map=23, ascii=0, run_time=0:00:01:48)...[0m
[1;94m[*] [0mFuzzing test case #1 (12 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=26, favorite=1, was_fuzzed=1, exec_us=2698, hits=1158, map=23, ascii=0, run_time=0:00:01:49)...[0m
[1;94m[*] [0mFuzzing test case #12 (13 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1341, hits=1, map=25, ascii=0, run_time=0:00:01:49)...[0m
[1;94m[*] [0mFuzzing test case #1 (13 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=25, favorite=1, was_fuzzed=1, exec_us=2698, hits=1201, map=23, ascii=0, run_time=0:00:01:49)...[0m
[1;94m[*] [0mFuzzing test case #1 (15 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=26, favorite=1, was_fuzzed=1, exec_us=2698, hits=1225, map=23, ascii=0, run_time=0:00:01:50)...[0m
[1;94m[*] [0mFuzzing test case #1 (16 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=26, favorite=1, was_fuzzed=1, exec_us=2698, hits=1257, map=23, ascii=0, run_time=0:00:01:50)...[0m
[1;94m[*] [0mFuzzing test case #1 (16 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=26, favorite=1, was_fuzzed=1, exec_us=2698, hits=1317, map=23, ascii=0, run_time=0:00:01:50)...[0m
[1;94m[*] [0mFuzzing test case #16 (17 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1287, hits=11, map=27, ascii=0, run_time=0:00:01:51)...[0m
[1;94m[*] [0mFuzzing test case #1 (17 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=24, favorite=1, was_fuzzed=1, exec_us=2698, hits=1374, map=23, ascii=0, run_time=0:00:01:51)...[0m
[1;94m[*] [0mFuzzing test case #16 (19 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=18, favorite=1, was_fuzzed=1, exec_us=1287, hits=17, map=27, ascii=0, run_time=0:00:01:51)...[0m
[1;94m[*] [0mFuzzing test case #20 (22 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1325, hits=1, map=25, ascii=0, run_time=0:00:01:53)...[0m
[1;94m[*] [0mFuzzing test case #16 (22 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=16, favorite=1, was_fuzzed=1, exec_us=1287, hits=31, map=27, ascii=0, run_time=0:00:01:53)...[0m
[1;94m[*] [0mFuzzing test case #23 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1283, hits=1, map=28, ascii=0, run_time=0:00:02:16)...[0m
[1;94m[*] [0mFuzzing test case #22 (24 total, 0 crashes saved, state: started :-), mode=explore, perf_score=300, weight=40, favorite=1, was_fuzzed=0, exec_us=1289, hits=1, map=25, ascii=0, run_time=0:00:02:16)...[0m
[1;94m[*] [0mFuzzing test case #27 (30 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1310, hits=2, map=28, ascii=0, run_time=0:00:02:19)...[0m
[1;94m[*] [0mFuzzing test case #12 (30 total, 0 crashes saved, state: started :-), mode=explore, perf_score=345, weight=9, favorite=1, was_fuzzed=1, exec_us=1341, hits=14, map=25, ascii=0, run_time=0:00:02:19)...[0m
[1;94m[*] [0mFuzzing test case #27 (30 total, 0 crashes saved, state: started :-), mode=explore, perf_score=919, weight=29, favorite=1, was_fuzzed=1, exec_us=1310, hits=2, map=28, ascii=0, run_time=0:00:02:20)...[0m
[1;94m[*] [0mFuzzing test case #33 (34 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1341, hits=2, map=27, ascii=0, run_time=0:00:03:37)...[0m
[1;94m[*] [0mFuzzing test case #31 (34 total, 0 crashes saved, state: started :-), mode=explore, perf_score=200, weight=54, favorite=1, was_fuzzed=0, exec_us=1308, hits=2, map=28, ascii=0, run_time=0:00:03:37)...[0m
[1;94m[*] [0mFuzzing test case #23 (35 total, 0 crashes saved, state: started :-), mode=explore, perf_score=919, weight=45, favorite=1, was_fuzzed=1, exec_us=1283, hits=1, map=28, ascii=0, run_time=0:00:03:38)...[0m
[1;94m[*] [0mFuzzing test case #35 (37 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1279, hits=1, map=27, ascii=0, run_time=0:00:03:42)...[0m
[1;94m[*] [0mFuzzing test case #1 (37 total, 0 crashes saved, state: started :-), mode=explore, perf_score=114, weight=23, favorite=1, was_fuzzed=1, exec_us=2698, hits=1584, map=23, ascii=0, run_time=0:00:03:43)...[0m
[1;94m[*] [0mFuzzing test case #35 (37 total, 0 crashes saved, state: started :-), mode=explore, perf_score=919, weight=36, favorite=1, was_fuzzed=1, exec_us=1279, hits=1, map=27, ascii=0, run_time=0:00:04:04)...[0m
[1;94m[*] [0mFuzzing test case #41 (44 total, 0 crashes saved, state: started :-), mode=explore, perf_score=0, weight=0, favorite=1, was_fuzzed=0, exec_us=1194, hits=1, map=24, ascii=0, run_time=0:00:04:39)...[0m
[1;94m[*] [0mFuzzing test case #33 (44 total, 0 crashes saved, state: started :-), mode=explore, perf_score=919, weight=27, favorite=1, was_fuzzed=1, exec_us=1341, hits=2, map=27, ascii=0, run_time=0:00:04:39)...[0m
[?25h[1;91m

+++ Testing aborted programmatically +++
[0m[1;94m[*] [0mStatistics: 48 new corpus items found, 53.33% coverage achieved, 1 crashes saved, 0 timeouts saved, total runtime 0 days, 0 hrs, 5 min, 2 sec[0m
[1;92m[+] [0mWe're done here. Have a nice day!
[0m
